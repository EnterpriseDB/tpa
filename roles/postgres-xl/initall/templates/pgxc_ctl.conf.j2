{# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com> #}
#!/bin/bash

pgxcOwner=postgres
pgxcUser=postgres
tmpDir=/tmp
localTmpDir=$tmpDir

configBackup=n

dataDirRoot=/pgxl/data

#---- GTM ------------------------------------------------------------------------------------

# GTM is mandatory.  You must have at least (and only) one GTM master in your Postgres-XC cluster.
# If GTM crashes and you need to reconfigure it, you can do it by pgxc_update_gtm command to update
# GTM master with others.   Of course, we provide pgxc_remove_gtm command to remove it.  This command
# will not stop the current GTM.  It is up to the operator.

#---- Overall -------
gtmName=()

#---- GTM Master -----------------------------------------------

#---- Overall ----
gtmMasterServer=()
gtmMasterPort=()
gtmMasterDir=()

#---- Configuration ---
gtmExtraConfig=() # Will be added gtm.conf for both Master and Slave (done at initilization only)
gtmMasterSpecificExtraConfig=()	# Will be added to Master's gtm.conf (done at initialization only)

#---- GTM Slave -----------------------------------------------

# Because GTM is a key component to maintain database consistency, you may want to configure GTM slave
# for backup.

#---- Overall ------
gtmSlave=n					# Specify y if you configure GTM Slave.   Otherwise, GTM slave will not be configured and
							# all the following variables will be reset.
gtmSlaveName=()
gtmSlaveServer=()		# value none means GTM slave is not available.  Give none if you don't configure GTM Slave.
gtmSlavePort=()			# Not used if you don't configure GTM slave.
gtmSlaveDir=()	# Not used if you don't configure GTM slave.
# Please note that when you have GTM failover, then there will be no slave available until you configure the slave
# again. (pgxc_add_gtm_slave function will handle it)

#---- Configuration ----
gtmSlaveSpecificExtraConfig=() # Will be added to Slave's gtm.conf (done at initialization only)

#---- GTM Proxy -------------------------------------------------------------------------------------------------------
# GTM proxy will be selected based upon which server each component runs on.
# When fails over to the slave, the slave inherits its master's gtm proxy.  It should be
# reconfigured based upon the new location.
#
# To do so, slave should be restarted.   So pg_ctl promote -> (edit postgresql.conf and recovery.conf) -> pg_ctl restart
#
# You don't have to configure GTM Proxy if you dont' configure GTM slave or you are happy if every component connects
# to GTM Master directly.  If you configure GTL slave, you must configure GTM proxy too.

#---- Shortcuts ------
gtmProxyDir=()

#---- Overall -------
gtmProxy=()				# Specify y if you conifugre at least one GTM proxy.   You may not configure gtm proxies
						# only when you dont' configure GTM slaves.
						# If you specify this value not to y, the following parameters will be set to default empty values.
						# If we find there're no valid Proxy server names (means, every servers are specified
						# as none), then gtmProxy value will be set to "n" and all the entries will be set to
						# empty values.
gtmProxyNames=()	# No used if it is not configured
gtmProxyServers=()			# Specify none if you dont' configure it.
gtmProxyPorts=()				# Not used if it is not configured.
gtmProxyDirs=()	# Not used if it is not configured.

#---- Configuration ----
gtmPxyExtraConfig=n		# Extra configuration parameter for gtm_proxy.  Coordinator section has an example.

#---- Coordinators ----------------------------------------------------------------------------------------------------

#---- Coordinators ----------------------------------------------------------------------------------------------------
coordMasterDir=$dataDirRoot/coord_master
coordSlaveDir=$HOME/coord_slave
coordArchLogDir=$HOME/coord_archlog

#---- Overall ------------
coordNames=()		# Master and slave use the same name
coordPorts=()			# Master server listening ports
poolerPorts=()			# Master pooler ports
coordPgHbaEntries=(10.33.63.0/24)	            # Assumes that all the coordinator (master/slave) accepts
												# the same connection
												# This entry allows only $pgxcOwner to connect.
												# If you'd like to setup another connection, you should
												# supply these entries through files specified below.

#---- Master -------------
coordMasterServers=()		# none means this master is not available
coordMasterDirs=()
coordMaxWALsender=5	# max_wal_senders: needed to configure slave. If zero value is specified,
						# it is expected to supply this parameter explicitly by external files
						# specified in the following.	If you don't configure slaves, leave this value to zero.
coordMaxWALSenders=()
						# max_wal_senders configuration for each coordinator.

#---- Slave -------------
coordSlave=n			# Specify y if you configure at least one coordiantor slave.  Otherwise, the following
						# configuration parameters will be set to empty values.
						# If no effective server names are found (that is, every servers are specified as none),
						# then coordSlave value will be set to n and all the following values will be set to
						# empty values.
coordSlaveSync=n		# Specify to connect with synchronized mode.
coordSlaveServers=()			# none means this slave is not available
coordSlavePorts=()			# coordinator slave listening ports
coordSlavePoolerPorts=()			# coordinator slave pooler ports
coordSlaveDirs=()
coordArchLogDirs=()

#---- Configuration files---
# Need these when you'd like setup specific non-default configuration 
# These files will go to corresponding files for the master.
# You may supply your bash script to setup extra config lines and extra pg_hba.conf entries 
# Or you may supply these files manually.
coordExtraPgHba=coordExtraPgHba
cat >$coordExtraPgHba << EOF
#================================================
# Added to all the coordinator ph_hba.conf
# Original: $coordExtraPgHba
host replication all 10.33.63.0/24 trust
host postgres barman 10.33.63.0/24 trust
host postgres streaming_barman 10.33.63.0/24 trust
EOF

coordExtraConfig=coordExtraConfig	# Extra configuration file for coordinators.  
						# This file will be added to all the coordinators'
						# postgresql.conf
# Pleae note that the following sets up minimum parameters which you may want to change.
# You can put your postgresql.conf lines here.
cat > $coordExtraConfig <<EOF
#================================================
# Added to all the coordinator postgresql.conf
# Original: $coordExtraConfig
log_destination = 'stderr'
logging_collector = on
log_directory = 'pg_log'
log_line_prefix = '%p:%v:%x:%m:%C:%R'
listen_addresses = '*'
max_connections = 2000
max_prepared_transactions = 2000
hot_standby = off
log_error_verbosity=verbose
shared_buffers = {{shared_buffers_mb}}MB
work_mem = 1GB
effective_cache_size = 20GB
default_statistics_target = 10000
shared_queue_size = 8192
max_pool_size=200
max_wal_size=32GB
max_datanodes=64
max_coordinators=64
full_page_writes = off
checkpoint_timeout = 1h
wal_level=archive
max_replication_slots=5
max_wal_senders=5
gtm_backup_barrier=true
EOF

# Additional Configuration file for specific coordinator master.
# You can define each setting by similar means as above.
coordSpecificExtraConfig=()
coordSpecificExtraPgHba=()

#---- Datanodes -------------------------------------------------------------------------------------------------------

#---- Shortcuts --------------
datanodeMasterDir=$dataDirRoot/dn_master
datanodeSlaveDir=$dataDirRoot/dn_slave
datanodeArchLogDir=$dataDirRoot/datanode_archlog

#---- Overall ---------------
primaryDatanode= # Primary Node.
datanodeNames=()
datanodePorts=()	# Master and slave use the same port!
datanodePoolerPorts=()	# Master and slave use the same port!
datanodePgHbaEntries=(10.33.63.0/24)	# Assumes that all the coordinator (master/slave) accepts
										# the same connection
										# This list sets up pg_hba.conf for $pgxcOwner user.
										# If you'd like to setup other entries, supply them
										# through extra configuration files specified below.

#---- Master ----------------
datanodeMasterServers=()	# none means this master is not available.
													# This means that there should be the master but is down.
													# The cluster is not operational until the master is
													# recovered and ready to run.	
datanodeMasterDirs=()
datanodeMaxWalSender=5								# max_wal_senders: needed to configure slave. If zero value is 
													# specified, it is expected this parameter is explicitly supplied
													# by external configuration files.
													# If you don't configure slaves, leave this value zero.
datanodeMaxWALSenders=()
						# max_wal_senders configuration for each datanode

#---- Slave -----------------
datanodeSlave=n			# Specify y if you configure at least one coordiantor slave.  Otherwise, the following
						# configuration parameters will be set to empty values.
						# If no effective server names are found (that is, every servers are specified as none),
						# then datanodeSlave value will be set to n and all the following values will be set to
						# empty values.
datanodeSlaveServers=()	# value none means this slave is not available
datanodeSlavePorts=()	# Master and slave use the same port!
datanodeSlavePoolerPorts=()	# Master and slave use the same port!
#datanodeSlaveSync=y		# If datanode slave is connected in synchronized mode
datanodeSlaveDirs=()
datanodeArchLogDirs=()

# ---- Configuration files ---
# You may supply your bash script to setup extra config lines and extra pg_hba.conf entries here.
# These files will go to corresponding files for the master.
# Or you may supply these files manually.
datanodeExtraPgHba=datanodeExtraPgHba
cat >$datanodeExtraPgHba << EOF
#================================================
# Added to all the datanode pg_hba.conf
# Original: $datanodeExtraPgHba
host replication all 10.33.63.0/24 trust
host postgres barman 10.33.63.0/24 trust
host postgres streaming_barman 10.33.63.0/24 trust
EOF

datanodeExtraConfig=datanodeExtraConfig	
cat > $datanodeExtraConfig <<EOF
#================================================
# Added to all the datanode postgresql.conf
# Original: $datanodeExtraConfig
log_destination = 'stderr'
logging_collector = on
log_directory = 'pg_log'
log_line_prefix = '%p:%v:%x:%m:%C:%R'
#trace_locks = true
listen_addresses = '*'
max_connections = 2000
max_prepared_transactions = 2000
hot_standby = off
log_error_verbosity=verbose
shared_buffers = {{(shared_buffers_mb/(hostvars[groups['role_datanode'][0]]['num_datanode']|default(1)|int)) | int}}MB
work_mem = 1GB
effective_cache_size = 20GB
default_statistics_target = 10000
# TODO: Check shared_queue_size - larger values result in insane amounts of requested memory
shared_queue_size = 256
max_pool_size=200
max_wal_size=32GB
max_datanodes=64
max_coordinators=64
full_page_writes = off
checkpoint_timeout = 1h
wal_level=archive
max_replication_slots=5
max_wal_senders=5
EOF
# Additional Configuration file for specific datanode master.
# You can define each setting by similar means as above.
datanodeSpecificExtraConfig=()
datanodeSpecificExtraPgHba=()
