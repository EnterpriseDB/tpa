---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

# First, we must obtain the source code.
#
# At present, we support fetching a git repository to a local directory.

- name: Check if ssh agent forwarding is enabled
  shell: echo $SSH_AUTH_SOCK
  args:
    executable: /bin/bash
  register: cmd
  become: no
  changed_when: False

- name: Fetch {{ ifs.name }} from {{ git_repository_url }}, {{ git_repository_ref }}
  git:
    dest: "{{ source_directory }}"
    repo: "{{ git_repository_url }}"
    version: "{{ git_repository_ref or 'master' }}"
    reference: "{{ git_reference_repository|default(omit) }}"
    depth: 1
    accept_hostkey: yes
  register: git
  vars:
    ansible_connection: ssh
    ansible_ssh_host: "{{ (platform == 'docker')|ternary(ip_address, ansible_host) }}"
    ssh_auth_sock: "{{ cmd.stdout.strip() }}"
    ssh_env:
      SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
    git_credentials: "{{ lookup('env', 'TPA_GIT_CREDENTIALS') }}"
    git_env:
      GIT_USERNAME: "{{ git_credentials.split(':')[0] }}"
      GIT_PASSWORD: "{{ git_credentials.split(':')[1] if git_credentials else '' }}"
      TMPDIR: /var/tmp
    _task_environment: "{{
      git_credentials|ternary(git_env, {})
      |combine(ssh_auth_sock|ternary(ssh_env, {}))
    }}"
  when:
    source_directory not in mounted_sources
  environment: "{{ target_environment|combine(_task_environment) }}"

- include_role: name=src/install tasks_from=verify-branch.yml
  when:
    source_directory in mounted_sources
    and git_repository_ref|default('') != ''

- block:
  - name: Remove old build directory
    file: state=absent path="{{ build_directory }}" force=yes
    tags: build-clean

  - name: Ensure build directory exists
    file: state=directory path="{{ build_directory }}"
  when:
    build_directory|default(source_directory) != source_directory

# Next, we must run a series of commands to build the sources and
# install the results. The caller may specify a build_commands array and
# a build_environment hash, or we'll just run "make install" by default.

- name: Build {{ ifs.name }}
  shell: >
    PATH={{ build_path }} {{ item }} >> {{ build_log }} 2>&1
  args:
    chdir: "{{ build_directory }}"
    executable: /bin/bash
  with_items: "{{ build_commands|default([]) or default_build_commands }}"
  vars:
    build_log: "{{ build_log|default('/tmp/build.log') }}"
    default_build_commands:
    - "make -f {{ source_directory }}/Makefile install"
    _task_environment: "{{ build_environment|default({}) }}"
  environment: "{{ target_environment|combine(_task_environment) }}"
  notify:
    - Note Postgres restart required
