---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

- name: "Include Zabbix gpg ids"
  include_vars: zabbix.yml

- name: "Set short version name"
  set_fact:
    zabbix_short_version: "{{ zabbix_version | regex_replace('\\.', '') }}"
    zabbix_underscore_version: "{{ zabbix_version | regex_replace('\\.', '_') }}"

- name: "Ubuntu | Install gpg key"
  apt_key:
    id: "{{ sign_keys[zabbix_short_version][zabbix_agent_distribution_release]['sign_key'] }}"
    url: http://repo.zabbix.com/zabbix-official-repo.key
  become: yes

- name: "Ubuntu | Check for zabbix repositories"
  find:
    paths: /etc/apt/sources.list.d
    patterns: repo_zabbix_com_zabbix*.list
    excludes: "repo_zabbix_com_zabbix_{{ zabbix_underscore_version }}_ubuntu.list"
  register: repositories
  become: yes

- name: "Ubuntu | Remove unecessary zabbix repositories"
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ repositories.files }}"
  become: yes

- name: "Ubuntu | Installing deb-src repository Ubuntu"
  apt_repository:
    repo: "deb-src http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu {{ zabbix_agent_distribution_release }} main"
    state: present
  become: yes

- name: "Ubuntu | Installing deb repository Ubuntu"
  apt_repository:
    repo: "deb http://repo.zabbix.com/zabbix/{{ zabbix_version }}/ubuntu {{ zabbix_agent_distribution_release }} main"
    state: present
  become: yes

# Note: set cache_valid_time=0 to ensure that an apt-get update after the added repo-key
# else you often get 'WARNING: The following packages cannot be authenticated!
# See also:
# http://askubuntu.com/questions/75565/why-am-i-getting-authentication-errors-for-packages-from-an-ubuntu-repository
- name: "Ubuntu | Installing zabbix-agent"
  apt:
    pkg:
      - "{{ zabbix_agent_package }}"
      - "{{ zabbix_sender_package }}"
      - "{{ zabbix_get_package }}"
    state: "{{ zabbix_agent_package_state }}"
    update_cache: yes
    cache_valid_time: 0
    force_apt_get: "{{ zabbix_apt_force_apt_get }}"
    install_recommends: "{{ zabbix_apt_install_recommends }}"
  register: zabbix_agent_package_installed
  until: zabbix_agent_package_installed is succeeded
  become: yes
  check_mode: no

- name: "Install policycoreutils-python"
  apt:
    pkg: policycoreutils-python-utils
    state: installed
    update_cache: yes
    cache_valid_time: 0
    force_apt_get: "{{ zabbix_apt_force_apt_get }}"
    install_recommends: "{{ zabbix_apt_install_recommends }}"
  register: zabbix_agent_policycoreutils_installed
  until: zabbix_agent_package_installed is succeeded
  become: yes
  when: zabbix_selinux | bool

- name: "Ubuntu | Enable the service"
  service:
    name: "{{ zabbix_agent_service }}"
    enabled: yes
    use: service
  become: yes
  when: >
    task_selector|permits('service')
