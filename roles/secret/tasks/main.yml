---

# © Copyright EnterpriseDB UK Limited 2015-2021 - All rights reserved.

# We generate a random secret and store it in an encrypted file under
# the local vault directory.
#
# If ansible-playbook is invoked with the right --vault-password-file
# argument (or --ask-vault-pass), this will work transparently and not
# store unencrypted secrets on disk.

- assert:
    msg: "Please specify the secret_name to generate"
    that:
      - secret_name is defined

- set_fact:
    _secret_file: >-
      {{ '%s/inventory/group_vars/%s/secrets/%s.yml' % (cluster_dir, cluster_tag, secret_name) }}

# Write «secret_name: '…contents…'» in YAML format into ansible-vault,
# so that we can load the result back in with include_vars.

- name: Generate encrypted secret {{ secret_name }}
  shell: >
    ( flock -n 9 || exit 99;
    /usr/bin/printf "{{ secret_name }}: >-\\n  %s\n" $("{{ tpa_dir }}"/architectures/lib/password) |
    ansible-vault encrypt --vault-password-file "{{ _vault_passfile }}" --output "{{ _secret_file }}";
    exit 88 ) 9<"{{ inventory_file }}"
  args:
    creates: "{{ _secret_file }}"
    executable: /bin/bash
  register: secret
  failed_when:
    secret.rc not in [0, 88, 99]
  changed_when:
    secret.rc == 88
  no_log: true
  become: no
  vars:
    _vault_passfile: >-
      {{ _vault_dir }}/vault_pass.txt
  delegate_to: localhost

- meta: reload_vars
