{% import '_send_icinga_config.j2' as config with context -%}
{% include '_send_icinga_init.sh.j2' -%}

# 1. Run checks and collect output in $NSCA_MSG
NSCA_MSG=$(
    {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action connection
    {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action backends
    {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action disk_space --warning="{{disk_space_warn}}" --critical="{{disk_space_critical}}"
    {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action prepared_txns --critical 1
    ({{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action txn_idle --db postgres --warning='{{txn_idle_warning}}' --critical='{{txn_idle_critical}}' | tr '\n' ' ' | echo $(</dev/stdin))
    ({{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action txn_time --db postgres --warning='{{txn_time_warning}}' --critical='{{txn_time_critical}}' --excludeapp='pg_dump' | tr '\n' ' ' | echo $(</dev/stdin))
{% if 'replica' not in role %}
    ({{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action txn_wraparound --db postgres | tr '\n' ' ' | echo $(</dev/stdin))
{% endif %}

{% if check_sequences|bool == true and 'replica' not in role %}
    {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_PORT $SHOWTIME --action sequence --db {{database_list|first}}{% if check_sequences_only %} --include={% for sequence in check_sequences_only %}"{{sequence}}"{% if not loop.last %},{% endif %}{% endfor %}{% endif %}
{% endif %}

{% if check_pg_bouncer|bool == true %}
   {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_BOUNCER_PORT $PG_BOUNCER_USER $SHOWTIME --action=pgbouncer_backends -w {{pg_bouncer_backends_w}} -c {{pg_bouncer_backends_c}}
   {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_BOUNCER_PORT $PG_BOUNCER_USER $SHOWTIME --action=pgb_pool_cl_waiting -w {{pg_bouncer_cl_waiting_w}} -c {{pg_bouncer_cl_waiting_c}}
   {{config.sudo}} ~/bin/check_postgres.pl $PG_HOST $PG_BOUNCER_PORT $PG_BOUNCER_USER $SHOWTIME --action=pgb_pool_maxwait -w {{pg_bouncer_maxwait_w}} -c {{pg_bouncer_maxwait_c}}
{% endif %}

{% if (check_replication_slots|bool == true) and ('primary' in role) %}
   {{config.sudo}} ~/bin/check_replication.pl $PG_HOST $PG_PORT --check=slot
{% endif %}
)

# 2. Send output to specified icinga hosts

{% include '_send_nsca.sh.j2' %}
