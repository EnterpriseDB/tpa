---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# If initialise_harp is true, we must install either the harp_manager or
# harp_proxy packages on the instance, or both if the given node uses both
# harp_manager and harp_proxy roles. For offline installs, the downloader
# needs to get both sets of packages anyways.

- include_role: name=pkg/add_to_list
  vars:
    list_contents: "{{
        harp_packages[harp_version]
        |packages_for(ansible_os_family, harp_package_version)
      }}"
  when:
    initialise_harp and 'bdr' in role
    or ('bdr' in role and failover_manager == 'harp'
      and 'downloader' in role)

- include_role: name=pkg/add_to_list
  vars:
    list_contents: "{{
        harp_proxy_packages[harp_version]
        |packages_for(ansible_os_family, harp_package_version)
      }}"
  when: >
    'harp-proxy' in role

# Our tests require psycopg2.
- include_role:
    name: postgres/pkg
    tasks_from: list-client-packages.yml
  when: >
    'harp-proxy' in role

# If we're not using the pgbouncer role (i.e., setting up pgbouncer to
# connect to harp-proxy), and we're using harp_proxy_mode = pgbouncer,
# we must install pgbouncer here. harp-proxy will manage the service.

- name: Include pgbouncer packages if required by harp_proxy_mode
  include_role:
    name: pgbouncer/pkg
    tasks_from: list-packages.yml
  when: >
    'harp-proxy' in role
    and 'pgbouncer' not in role
    and harp_proxy_mode == "pgbouncer"
