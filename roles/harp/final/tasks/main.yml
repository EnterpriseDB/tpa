---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# When using BDR as the DCS, harpctl apply will work only after the BDR
# nodes have reached consensus through RAFT.

- name: Wait for bdr nodes to reach consensus before 'harpctl apply'
  postgresql_query:
    conninfo: "{{ dsn|dbname(bdr_database) }}"
    query: >
      SELECT status FROM bdr.monitor_group_raft()
  register: bdr_raft
  until: bdr_raft.status == 'OK'
  retries: 60
  delay: 1
  become_user: "{{ postgres_user }}"
  become: yes
  when: >
    'bdr' in role
    and harp_consensus_protocol == 'bdr'
    and harp_version is version('2', '==')

# Before we start harp2, we must run "harpctl apply" once per unique
# harp_location (because we have set up one etcd per harp_location).
# With BDR, we've already made sure there is only one harp_location
# across the cluster, so the same code will do the right thing.
#
# We check to ensure `harpctl apply` runs only when harp.cluster.init.yml
# has changed (true for a fresh installation as well)

- meta: flush_handlers

- block:
    - set_fact:
        harp_location_group: "harp_location_{{ harp_location }}"

    - group_by:
        key: "{{ harp_location_group }}"
      changed_when: false

    - name: Initialise cluster with harpctl apply
      command: "harpctl apply {{ harp_directory }}/harp.cluster.init.yml"
      become_user: "{{ postgres_user }}"
      become: yes
      when:
        inventory_hostname == groups[harp_location_group]|sort|first
  when: >
    'bdr' in role
    and inventory_hostname in first_bdr_primary_candidates
    and (harp_bootstrap_required|default(false))|bool

- include_role:
    name: harp/service
  when: >
    task_selector|permits('service')

- name: Start or restart harp services
  systemd:
    name: "{{ item }}"
    state: "{{ harp_service_end_state|default('started') }}"
    enabled: yes
  with_items: "{{ harp_services[harp_version] }}"
  vars:
    harp_services:
      "2":
        - "{{ ('postgres' in role)|ternary('harp-manager', []) }}"
  when: >
    task_selector|permits('service', 'restart')

- name: Start or restart harp-proxy one-by-one on proxy instances
  include_tasks: restart-one-proxy.yml
  with_items: "{{ groups['role_harp-proxy'] }}"
  when:
    inventory_hostname == item
    and task_selector|permits('service', 'restart')
