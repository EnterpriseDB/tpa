cluster:
  name: {{ cluster_name }}

dcs:
  driver: "{{ harp_consensus_protocol }}"
  request_timeout: {{ harp_request_timeout|default(6000) }}
  watch_poll_interval: {{ harp_watch_poll_interval|default(500) }}
{% if harp_consensus_protocol == 'etcd' %}
  ssl: "off"
  ssl_ca_file: ""
  ssl_cert_file: ""
  ssl_key_file: ""
{% endif %}
  endpoints:
{% if harp_consensus_protocol == 'etcd' %}
{%   for h in groups['role_etcd']|sort %}
{%     set v = hostvars[h] %}
{%     if v.harp_location == harp_location %}
  - {{ h }}:{{ v.etcd_client_port|default(2379) }}
{%     endif %}
{%   endfor %}
{% elif harp_consensus_protocol == 'bdr' %}
{%   if 'harp-proxy' not in role %}
  - "{{ bdr_node_local_dsn }}"
{%   else %}
{%     set dcs_dsns = [] %}
{%     for h in groups[bdr_node_group]|sort %}
{%       set v = hostvars[h] %}
{%       if 'subscriber-only' not in v.role %}
{%         set dsn = v.bdr_node_dsn %}
{%         if harp_dcs_user is defined %}
{%           set dsn = v.harp_dcs_node_dsn|dbname(v.bdr_database, user=harp_dcs_user) %}
{%         endif %}
{%         if dcs_dsns.append(dsn) %}{% endif %}
{%       endif %}
{%     endfor %}
  - "{{ dcs_dsns|multihost_conninfo }}"
{%   endif %}
{% endif %}

{% if 'postgres' in role %}
manager:
  name: "{{ bdr_node_name|default(inventory_hostname) }}"
  log_level: "{{ harp_log_level|default('info') }}"
  start_command: {{ harp_postgres_start_command | default('sudo systemctl start postgres') }}
  stop_command: {{ harp_postgres_stop_command | default('sudo systemctl stop postgres') }}
  status_command: {{ harp_postgres_status_command | default('sudo systemctl status postgres') }}
{% endif %}
{% if 'harp-proxy' in role %}
proxy:
  log_level: "{{ harp_log_level|default('info') }}"
  name: "{{ inventory_hostname }}-proxy"
  location: {{ harp_location }}
{% if harp_proxy_mode == "pgbouncer" %}
  pgbouncer_bin_dir: {{ pgbouncer_bin_dir }}
{% endif %}
{% endif %}
