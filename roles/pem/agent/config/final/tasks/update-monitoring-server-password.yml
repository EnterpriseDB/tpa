---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# We must encrypt the agent's password for storage in the pem database,
# but the pemEncryptor binary that we use to do so is included only in
# the pem server package, not the agent package.

- name: Get encrypted postgres password
  command: "{{ pem_base_dir }}/encryptor/bin/pemEncryptor"
  environment: "{{ target_environment|combine(_task_environment) }}"
  vars:
    _task_environment:
      PEM_ENC_PAYLOAD: "{{ vars['%s_password' % postgres_user] }}"
  delegate_to: "{{ pem_server }}"
  register: enc_password
  no_log: true

- name: Update the agent-server binding password for the monitoring server
  postgresql_query:
    conninfo: "{{ hostvars[pem_server].node_dsn|dbname(hostvars[pem_server].pem_database) }}"
    queries:
    - text: >
        UPDATE pem.agent_server_binding SET password = %s
        WHERE agent_id = %s AND server_id = (
          SELECT id FROM pem.server WHERE server = %s AND port = %s
        ) AND username = %s;
      args:
      - "{{ enc_password.stdout }}"     # passwd
      - "{{ pem_agent_id }}"            # agentid
      - "{{ inventory_hostname }}"      # server_host
      - "{{ postgres_port }}"           # server_port
      - "{{ postgres_user }}"           # user_name
  become_user: "{{ postgres_user }}"
  delegate_to: "{{ pem_server }}"
  become: yes
