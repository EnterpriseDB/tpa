---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# We force an immediate backup of any instance for which we configured
# backups on this run. Barman will not start a backup until the server
# has archived at least one WAL segment, so we try to make sure that
# happens before we try.

# barman/final should have started pg_receivexlog (via barman cron). We
# check by looking for the corresponding entries in pg_stat_replication
# and pg_replication_slots. We know we ran barman cron, so we don't wait
# for the full minute that cron could potentially take to run it.

- name: Check that pg_receive{{ wal_or_xlog }} is running
  postgresql_query:
    conninfo: "{{ postgres_dsn }}"
    query: >
      select count(*)
      from pg_stat_replication r join pg_replication_slots s on (r.pid=s.active_pid)
      where application_name='barman_receive_wal' and
      slot_name='{{ slot_name }}' and state='streaming'
  become_user: "{{ postgres_user }}"
  become: yes
  register: receivers
  until: >
    receivers.count == 1
  retries: 30
  delay: 3

# Force a WAL segment switch and wait for the old segment to be archived
# (on a primary, this is equivalent to barman switch-wal --archive; on a
# replica, this is equivalent to running pg_switch_wal() on the primary
# and then running barman switch-wal --archive with Barman >= 2.5).

- include_tasks: force-archive.yml

- include_tasks: backup.yml
  with_items:
    "{{ range(nb|int)|list }}"
  vars:
    nb: "{{ num_backups|default(1) }}"
