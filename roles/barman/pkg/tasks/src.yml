---

# Â© Copyright EnterpriseDB UK Limited 2015-2023 - All rights reserved.

- include_role: name=src/install tasks_from=clone.yml
  vars:
    name: Barman
    repo: "{{ barman_git_url }}"
    dest: "{{ barman_src_dir }}"
    version: "{{ barman_git_ref|default('master') }}"
    reference: "{{ barman_git_reference_repo|default(omit) }}"

- include_role: name=src/install tasks_from=verify-branch.yml
  vars:
    source_directory: "{{ barman_src_dir }}"
    git_repository_ref: "{{ barman_git_ref }}"
  when:
    barman_git_ref is defined

- name: Remove old build directory
  file:
    path: "{{ barman_build_dir }}"
    state: absent
    force: yes
  tags: [build-clean, barman-clean]

- name: Ensure build directory exists
  file:
    path: "{{ barman_build_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

# The source directory may be read-only, and setup.py does not make it
# convenient to do an out-of-tree build the way we do for other things,
# so we copy the source to a writable build directory as a workaround.

- name: Copy source to writeable build directory
  shell: "cp -a {{ barman_src_dir }}/* {{ barman_build_dir }}"

- name: Install Barman from source
  command: >
    {{ python }} setup.py install {{ extra_args[ansible_os_family]|join(" ") }}
  args:
    chdir: "{{ barman_build_dir }}"
  vars:
    extra_args:
      Debian:
      - "--install-layout=deb"
      RedHat:
      - "--prefix=/usr"

# We don't bother to recreate /etc/cron.d/barman exactly, since the deb
# and rpm packages install slightly different (equivalent) files anyway.
# As long as the line ends with "barman -q cron", the lineinfile task in
# server.yml will work correctly.

- name: Set up /etc/cron.d/barman
  copy:
    dest: /etc/cron.d/barman
    owner: root
    group: root
    mode: "0644"
    force: no
    content: |
      * * * * * barman /etc/tpa/barman-home-ok && /usr/bin/barman -q cron
