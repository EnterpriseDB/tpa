---

# Â© Copyright EnterpriseDB UK Limited 2015-2021 - All rights reserved.

# We have already assigned first_bdr_primary in roles/platform, but in
# case a newly-added instance was selected, we must fall back to some
# older instance that knows about existing the node group(s).

- name: Override first_bdr_primary if required
  set_fact:
    first_bdr_primary: "{{
      first_bdr_primary_candidates|intersect(_current_bdr_candidates)|first
    }}"
  when: >
    'bdr' in role
    and _current_bdr_candidates is not empty
    and first_bdr_primary not in _current_bdr_candidates
  vars:
    _current_bdr_candidates: "{{
      hostvars.values()|list
      |selectattr('cluster_facts.bdr_databases', 'defined')
      |selectattr('cluster_facts.bdr_databases', 'contains', bdr_database)
      |map(attribute='inventory_hostname')
      |list
    }}"

# If password_encryption is defined, we use that value. If not, and the
# cluster is running, we use the present value of password_encryption as
# the default, or the built-in default_password_encryption otherwise,
# which is md5 for 9.6 and lower, and scram-sha-256 for 10 and above.

- name: Set password_encryption
  set_fact:
    password_encryption: "{{
      password_encryption|default(
        (current_setting == 'on')|ternary('md5', current_setting)
      )
    }}"
  vars:
    current_setting: "{{
      cluster_facts.pg_settings.password_encryption|default(default_password_encryption)
    }}"

# If enable_camo is not explicitly set, we set it based on the current
# value of bdr.enable_camo (or pg2q.enable_camo for older versions of
# BDR), if available; or use the default of "on".
#
# This allows us to introduce an optional setting that maintains
# compatibility with existing clusters (where we would have always set
# it to 'on', but someone may have changed the value with an override).
#
# Note that if you set enable_camo to "on", pg_settings will report the
# current value as "remote_commit_flush". We must avoid changing the
# configuration file (and triggering a restart) unnecessarily.

- name: Set default value for enable_camo if required
  set_fact:
    enable_camo: "{{ enable_camo|default(_value) }}"
  vars:
    pg_settings: "{{ cluster_facts.pg_settings|default({}) }}"
    _current_or_default: "{{
      pg_settings.get('bdr.enable_camo')|default(
        pg_settings.get('pg2q.enable_camo')|default('on')
      )
    }}"
    _value: "{{
      (_current_or_default == 'remote_commit_flush')|ternary(
        'on', _current_or_default
      )
    }}"
  when: >
    'bdr' in role
