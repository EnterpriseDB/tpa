---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Set postgres_data_dir
  set_fact:
    postgres_data_dir: "{{ postgres_data_dir|default(default_postgres_data_dir) }}"
  tags: always

- name: Perform basic postgres fact discovery
  minimal_postgres_setup:
    pgdata: "{{ postgres_data_dir|default(default_postgres_data_dir) }}"
  become_user: root
  become: yes
  tags: always

- name: Ensure postgres_version matches pgdata_version, if defined
  assert:
    msg: >-
      postgres_version is set to {{ postgres_version }}, but
      {{ postgres_data_dir }} was initialised with {{ pgdata_version }}
    that: postgres_version|float == pgdata_version|float
  when:
    postgres_version is defined and pgdata_version is defined
  tags: always

- name: Set postgres_version
  set_fact:
    postgres_version: "{{ version }}"
    postgres_versionNN: "{{ version|replace('.','') }}"
  vars:
    version: "{{ postgres_version|default(pgdata_version|default(default_postgres_version)) }}"
  tags: always

- name: Set various postgres facts
  set_fact:
    postgres_user: "{{ postgres_user|default(default_postgres_user) }}"
    postgres_group: "{{ postgres_group|default(default_postgres_user) }}"
    postgres_home: "{{ postgres_home|default(default_postgres_home_dirs[ansible_os_family]) }}"
    postgres_bin_dir: "{{ postgres_bin_dir|default(default_postgres_bin_dirs[ansible_os_family]) }}"
    postgres_host: "{{ postgres_host|default('localhost') }}"
    postgres_port: "{{ postgres_port|default(5432) }}"
    postgres_service_name: postgres
    postgres_installation_method: "{{ postgres_installation_method|default(default_postgres_installation_method) }}"
    postgres_install_dir: "{{ postgres_install_dir|default(default_postgres_install_dir) }}"
    log_destination: "{{ log_destination|default(default_log_destination) }}"
    install_from_source: "{{ install_from_source|default([]) }}"
    barman_user: "{{ barman_user|default(default_barman_user) }}"
    barman_group: "{{ barman_group|default(default_barman_group) }}"
    barman_home: "{{ barman_home|default(default_barman_home) }}"
    backup_name: "{{ backup_name|default(inventory_hostname) }}"
    repmgr_conf_dir: "{{ repmgr_conf_dir|default(default_repmgr_conf_dir) }}"
    bdr_database: "{{ bdr_database|default(default_bdr_database) }}"
    bdr_node_name: "{{ bdr_node_name|default(inventory_hostname) }}"
    bdr_node_group: "{{ bdr_node_group|default(default_bdr_node_group) }}"
    haproxy_port: "{{ haproxy_port|default(default_haproxy_port) }}"
    pgbouncer_port: "{{ pgbouncer_port|default(default_pgbouncer_port) }}"
    pgbouncer_backend: "{{ pgbouncer_backend|default(default_pgbouncer_backend) }}"
    pgbouncer_backend_port: "{{ pgbouncer_backend_port|default(default_pgbouncer_backend_port) }}"
    wal_or_xlog: "{{ wal_string }}"
  vars:
    default_postgres_installation_method: >-
      {{ postgres_installation_source|default('pkg') }}
    wal_string: >-
      {%- if postgres_version is version('10', '>=') -%}wal
      {%- else -%}xlog
      {%- endif -%}
  tags: always

# If pgbouncer_backend points to a particular instance, we respect any
# custom haproxy_port or postgres_port setting for that instance. Note
# that changing haproxy_port without changing pgbouncer_backend won't
# automatically work as expected.

- name: Override pgbouncer_backend_port if required
  set_fact:
    pgbouncer_backend_port: "{{ _backend_port }}"
  when:
    pgbouncer_backend in hostvars and
    (hostvars[pgbouncer_backend].haproxy_port is defined or
     hostvars[pgbouncer_backend].postgres_port is defined)
  vars:
    _backend_vars: "{{ hostvars[pgbouncer_backend] }}"
    _backend_port: "{{
      _backend_vars['haproxy_port']|default(_backend_vars['postgres_port'])
    }}"
  tags: always

- name: Set pgbouncer_databases
  set_fact:
    pgbouncer_databases: "{{ pgbouncer_databases|default(default_pgbouncer_databases) }}"
  tags: always

- name: Set default config paths
  set_fact:
    postgres_conf_dir: "{{ postgres_conf_dir|default('') or postgres_data_dir }}"
    repmgr_conf_file: "{{ repmgr_conf_dir }}/repmgr.conf"
  tags: always

- name: Override postgres_bin_dir for source builds
  set_fact:
    postgres_bin_dir: "{{ postgres_install_dir }}/bin"
  when: >
    'postgres' in role and
    postgres_installation_method == 'src'
  tags: always

- name: Set client DSN attributes
  set_fact:
    postgres_client_dsn_attributes: "{{ postgres_client_dsn_attributes|default('') }}"
    barman_client_dsn_attributes: "{{ barman_client_dsn_attributes|default('') }}"
    repmgr_client_dsn_attributes: "{{ repmgr_client_dsn_attributes|default('') }}"
    bdr_client_dsn_attributes: "{{ bdr_client_dsn_attributes|default('') }}"
  tags: always

- name: Set default DSNs
  set_fact:
    dsn: "port={{ postgres_port }}"
    postgres_dsn: "port={{ postgres_port }} dbname=postgres"
    node_dsn: >-
      host={{ inventory_hostname }} port={{ postgres_port }}
    repmgr_node_dsn: >-
      host={{ _repmgr_hostname }} port={{ postgres_port }} dbname=repmgr user=repmgr {{ repmgr_client_dsn_attributes }}
    bdr_node_dsn: >-
      host={{ inventory_hostname }} port={{ postgres_port }} dbname={{ bdr_database }} user=postgres {{ bdr_client_dsn_attributes }}
    pgbouncer_node_dsn: >-
      host={{ inventory_hostname }} port={{ pgbouncer_port }}
  vars:
    _repmgr_hostname: "{{ repmgr_hostname|default(inventory_hostname) }}"
  tags: always

- name: Set default max_prepared_transactions
  set_fact:
    max_prepared_transactions: 16
  when: >
    'bdr' in role and max_prepared_transactions is not defined
