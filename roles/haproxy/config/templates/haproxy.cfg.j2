{# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com> #}
global
    log 127.0.0.1 local0 notice
    stats socket {{ haproxy_stats_socket }} level admin
    ca-base  /etc/ssl/certs
    crt-base  /etc/ssl/private
    ssl-default-bind-ciphers  ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    ssl-default-bind-options  no-sslv3 no-tlsv10 no-tls-tickets
    ssl-default-server-ciphers  ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    ssl-default-server-options  no-sslv3 no-tlsv10 no-tls-tickets
{% if ansible_os_family != 'RedHat' %}
    ssl-dh-param-file  /etc/ssl/dhparams.pem
    tune.ssl.default-dh-param  2048
{% endif %}

defaults
    timeout client 30s
    timeout server 30s
    timeout connect 5s
    option tcplog
    log global

frontend fe
    bind 127.0.0.1:5432

    maxconn 1000
    timeout client 1h

    default_backend be

backend be
    mode tcp

    stick-table type ip size 1 nopurge
    stick on dst

    option pgsql-check user haproxy

    timeout server 1h

{% for b in haproxy_backends %}
{%   set v = hostvars[b] %}
{%   set backup = loop.first|ternary('', 'backup') %}
    server {{ b }} {{ b }}:{{ v.postgres_port }} maxconn {{ v.haproxy_maxconn }} check inter 1500 downinter 6s rise 5 fall 3 {{ backup }}
{% endfor %}
