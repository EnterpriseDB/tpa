---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- set_fact:
    haproxy_maxconn: "{{
      hostvars[item].haproxy_maxconn|default((hostvars[item].max_connections|default(250))*0.90)|int
    }}"
  with_items: "{{ haproxy_backends }}"
  delegate_to: "{{ item }}"
  delegate_facts: true

- name: Create ssl-dh-param-file
  openssl_dhparam:
    path: /etc/ssl/dhparams.pem
    size: 2048
    owner: root
    group: root
    mode: 0644

- name: Install haproxy.cfg
  template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  notify:
    - Note haproxy reload required

- block:
  - name: Install agent.lua
    template:
      src: agent.lua.j2
      dest: /etc/haproxy/agent.lua
    notify:
      - Note haproxy reload required

  - name: Install check-queue
    template:
      src: check-queue.j2
      dest: /etc/haproxy/check-queue
      mode: 0755
    notify:
      - Note haproxy reload required

  - include_role:
      name: postgres/pgpass
    vars:
      pgpassfile: /etc/haproxy/.pgpass
      pgpass_owner: root
      pgpass_group: root
      pgpass_users:
      - check_queue
  when:
    haproxy_backends_need_queue_checks

- name: Ensure {{ socket_dir }} exists
  file:
    path: "{{ socket_dir }}"
    state: directory
    owner: haproxy
    group: haproxy
    mode: 0755
  vars:
    socket_dir: "{{ haproxy_stats_socket|dirname }}"

- name: Allow haproxy to connect to arbitrary backends
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes
  ignore_errors: yes

- name: Enable haproxy service
  service:
    name: haproxy
    enabled: yes
