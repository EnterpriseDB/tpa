---
# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# These assertions are made once early during TPA init phase

- block:
  - name: Ensure the configured Patroni package flavour is valid
    assert:
      that:
        patroni_package_flavour in ['edb', 'community']
      fail_msg: >
        You need to set 'patroni_package_flavour' either as 'edb' or 'community'.
        Refer to the TPA documentation for more information.

  - name: Ensure EDB repositories are configured when using 'edb' package flavour
    assert:
      that:
        edb_repositories|default([]) is not empty
      fail_msg: >
        Patroni flavour 'edb' requires EDB repositories to be defined.
    when:
      patroni_package_flavour == 'edb'

  - name: Ensure required repositories are configured when using 'community' package flavour
    assert:
      that:
        required_repos is subset(repo_list[ansible_os_family])
      fail_msg: >
        Patroni flavour 'community' requires the following repos to be defined: {{ required_repos }}
        got {{ repo_list[ansible_os_family] }}
    vars:
      required_repos:
      - PGDG
      repo_list:
        RedHat: "{{ yum_repository_list|default(['PGDG','EPEL']) }}"
        SUSE: "{{ suse_repository_list|default(['PGDG']) }}"
        Debian: "{{ apt_repository_list|default(['PGDG']) }}"
    when:
      patroni_package_flavour == 'community'

  when: patroni_installation_method == 'pkg'

- name: Ensure valid patroni_dcs is set
  assert:
    that: patroni_dcs in ['etcd']
    fail_msg:
      TPA only supports etcd as the patroni_dcs at this time.

- name: Ensure OS is supported with this configuration
  assert:
    that: not (
        ansible_distribution == 'RedHat'
        and ansible_distribution_release == '7'
        and groups['role_haproxy']|default([]) is not empty
      )
    fail_msg:
      TPA does not support Patroni with HAproxy on RedHat/CentOS 7

- name: Check for incompatible `postgres_conf_template`
  assert:
    that:
      postgres_conf_template is not defined
    fail_msg: >
      Patroni as a failover manager is incompatible with a custom `postgres_conf_template`
      as Patroni will overwrite the postgresql.conf with its own managed one.
      Please migrate all Postgres settings to config.yml options and/or `postgres_conf_settings`.

- name: Check for incompatible `postgres_conf_dir`
  assert:
    that:
      postgres_conf_dir|default(postgres_data_dir) == postgres_data_dir
    fail_msg: >
      Patroni as a failover manager is incompatible with the setting `postgres_data_dir` due
      to the way Patroni manages Postgres configuration. Please migrate all Postgres settings
      to config.yml options and/or `postgres_conf_settings`.

- name: Check for incompatible platform use with watchdog
  assert:
    that:
      not (platform == 'docker' and patroni_watchdog_enabled|default(false))
    fail_msg:
      Patroni watchdog cannot be used on docker platform.
