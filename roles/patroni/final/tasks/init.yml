---

# Â© Copyright EnterpriseDB UK Limited 2015-2023 - All rights reserved.

# On a new cluster we start by creating the Postgres cluster before
# patroni, at this stage the DCS has no info about the cluster
# but the configuration should be defined. Patroni is able to use
# the existing initialised database and config, and create a new
# DCS config.

# So first of all we read the cluster state from the DCS, then we
# start patroni on the only primary if the DCS is empty. This ensures
# that the empty replicas do not try to initialise new databases and
# form a cluster between them as this would result in a mismatch in
# system ID in the DCS. Then once the DCS has correct information we
# can start the replicas who will start to sync from the primary
# automatically.

- block:
  - include_role:
      name: postgres/restart
    vars:
      postgres_service_end_state: stopped

  - include_tasks: config.yml

  - include_role:
      name: patroni/service
      tasks_from: transition
    vars:
      to_state: started
  when: >
    'primary' in role
    and (patroni_cluster.members is not defined
      or patroni_cluster.members is empty)

- include_role:
    name: patroni/facts
    tasks_from: gather

- block:
  - include_tasks: config.yml

  - include_role:
      name: patroni/service
      tasks_from: transition
    vars:
      to_state: started

  when: >
    'replica' in role
    and patroni_cluster.members|selectattr('Member', 'eq', inventory_hostname)|list is empty
