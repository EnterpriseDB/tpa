---

# Copyright Â© EnterpriseDB Corporation

- name: Set default environment
  set_fact:
    target_environment: "{{ target_environment|default({}) }}"

- name: Set ip_addresses to []
  set_fact:
    ip_addresses: []

- name: Add private_ip to the address list
  set_fact:
    ip_addresses: "{{ ip_addresses|union(['private_ip']) }}"
  when:
    private_ip is defined

- name: Add public_ip to the address list
  set_fact:
    ip_addresses: "{{ ip_addresses|union(['public_ip']) }}"
  when:
    public_ip is defined

- name: Set primary IP address
  set_fact:
    ip_address: "{{ private_ip|default(public_ip) }}"
  when:
    ip_address is not defined

- name: Set default hostname_aliases
  set_fact:
    hostname_aliases: "{{ hostname_aliases|default({}) }}"

- name: Set tpa_2q_repositories from twoq_repositories (compat)
  set_fact:
    tpa_2q_repositories: "{{ twoq_repositories }}"
  when:
    tpa_2q_repositories is not defined and
    twoq_repositories is defined

- assert:
    msg: "Export TPA_2Q_SUBSCRIPTION_TOKEN to use tpa_2q_repositories"
    that:
      lookup('env', 'TPA_2Q_SUBSCRIPTION_TOKEN') != '' or
      tpa_2q_repositories|default([]) is empty
  tags: public_repos

- assert:
    msg: "Export EDB_REPO_CREDENTIALS_FILE to use the EDB repository"
    that:
      lookup('env', 'EDB_REPO_CREDENTIALS_FILE') != '' or
      ((postgresql_flavour|default('') != 'epas' or
       postgres_installation_method|default('') == 'src')
      and 'EDB' not in (apt_repository_list|default([]))
      and 'EDB' not in (yum_repository_list|default([])))
  tags: public_repos

- block:
  - stat:
      path: "{{ _file }}"
    register: _credsfile
    delegate_to: localhost
  - assert:
      msg: "EDB_REPO_CREDENTIALS_FILE={{ _file }} must exist and have mode 0600"
      that:
      - _credsfile.stat.exists
      - _credsfile.stat.mode == '0600'
  - assert:
      msg: "EDB_REPO_CREDENTIALS_FILE={{ _file }} must contain username:password"
      that:
      - _credentials != ''
      - _credentials.split(':')|length == 2
    vars:
      _credentials: "{{ lookup('file', _file) }}"
  vars:
    _file: "{{ lookup('env', 'EDB_REPO_CREDENTIALS_FILE') }}"
  when:
    _file != ''
  tags: public_repos

- set_fact:
    use_volatile_subscriptions: "{{ use_volatile_subscriptions|default(false)|bool }}"

- set_fact:
    failover_manager: harp
  when:
    failover_manager is not defined
    and enable_harp|default(false)|bool
