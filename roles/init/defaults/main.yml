---

# Â© Copyright EnterpriseDB UK Limited 2015-2024 - All rights reserved.

default_postgres_flavour: postgresql

default_postgres_version: 13

default_postgres_user:
  postgresql: postgres
  epas: enterprisedb
  edbpge: postgres

default_postgres_home_dir:
  postgresql:
    Debian: /var/lib/postgresql
    RedHat: /var/lib/pgsql
    SUSE: /var/lib/pgsql
  epas:
    Debian: /var/lib/edb-as
    RedHat: /var/lib/edb
    SUSE: /var/lib/edb
  edbpge:
    Debian: /var/lib/postgresql
    RedHat: /var/lib/pgsql
    SUSE: /var/lib/pgsql

default_postgres_port:
  postgresql: 5432
  epas: 5444
  edbpge: 5432

default_unix_socket_directories:
  postgresql:
    Debian: &all_socket_directories
      - /var/run/postgresql
      - /tmp
    RedHat: *all_socket_directories
    SUSE: *all_socket_directories
  epas:
    Debian:
      - /var/run/edb-as
    RedHat:
      - /tmp
    SUSE:
      - /tmp
  edbpge:
    Debian: &all_edbpge_socket_directories
      - /var/run/edb-pge
      - /tmp
    RedHat: *all_edbpge_socket_directories
    SUSE: *all_edbpge_socket_directories

default_postgres_data_dir: /opt/postgres/data
default_postgres_wal_dir: "{{ postgres_data_dir }}/pg_wal"

default_postgres_locale: en_US.UTF-8

default_postgres_conf_files:
  config_file: postgresql.conf
  ident_file: pg_ident.conf
  hba_file: pg_hba.conf

default_postgres_bin_dir:
  postgresql:
    Debian: "/usr/lib/postgresql/{{ postgres_version }}/bin"
    RedHat: "/usr/pgsql-{{ postgres_version }}/bin"
    SUSE: "/usr/pgsql-{{ postgres_version }}/bin"
  epas:
    Debian: "/usr/lib/edb-as/{{ postgres_version }}/bin"
    RedHat: "/usr/edb/as{{ postgres_version }}/bin"
    SUSE: "/usr/edb/as{{ postgres_version }}/bin"
  edbpge:
    Debian: "/usr/lib/edb-pge/{{ postgres_version }}/bin"
    RedHat: "/usr/edb/pge{{ postgres_version }}/bin"
    SUSE: "/usr/edb/pge{{ postgres_version }}/bin"

default_postgres_lib_dir:
  postgresql:
    Debian: "/usr/lib/postgresql/{{ postgres_version }}/lib"
    RedHat: "/usr/pgsql-{{ postgres_version }}/lib"
    SUSE: "/usr/pgsql-{{ postgres_version }}/lib"
  epas:
    Debian: "/usr/lib/edb-as/{{ postgres_version }}/lib"
    RedHat: "/usr/edb/as{{ postgres_version }}/lib"
    SUSE: "/usr/edb/as{{ postgres_version }}/lib"
  edbpge:
    Debian: "/usr/lib/edb-pge/{{ postgres_version }}/lib"
    RedHat: "/usr/edb/pge{{ postgres_version }}/lib"
    SUSE: "/usr/edb/pge{{ postgres_version }}/lib"


default_postgres_log_file: "/var/log/postgres/postgres.log"

default_postgres_tablespaces: {}

default_postgres_extensions_dictionary:
  edb_pg_tuner:
    packages:
      postgresql:
        Debian: &debian_pg_edb_pg_tuner_packages
          - edb-pg{{ postgres_version }}-postgres-tuner-1
        RedHat: &redhat_pg_edb_pg_tuner_packages
          - edb-pg{{ postgres_version }}-postgres-tuner1
        Ubuntu: *debian_pg_edb_pg_tuner_packages
        SLES: *redhat_pg_edb_pg_tuner_packages
      epas:
        Debian: &debian_as_edb_pg_tuner_packages
          - edb-as{{ postgres_version }}-postgres-tuner-1
        RedHat: &redhat_as_edb_pg_tuner_packages
          - edb-as{{ postgres_version }}-postgres-tuner1
        Ubuntu: *debian_as_edb_pg_tuner_packages
        SLES: *redhat_as_edb_pg_tuner_packages
      pgextended:
        Debian: *debian_pg_edb_pg_tuner_packages
        RedHat: *redhat_pg_edb_pg_tuner_packages
        Ubuntu: *debian_pg_edb_pg_tuner_packages
        SLES: *redhat_pg_edb_pg_tuner_packages
      edbpge:
        Debian: &debian_pge_edb_pg_tuner_packages
          - edb-postgresextended{{ postgres_version }}-postgres-tuner-1
        RedHat: &redhat_pge_edb_pg_tuner_packages
          - edb-postgresextended{{ postgres_version }}-postgres-tuner1
        Ubuntu: *debian_pge_edb_pg_tuner_packages
        SLES: *redhat_pge_edb_pg_tuner_packages
    spl: edb_pg_tuner

  query_advisor:
    packages:
      postgresql:
        Debian: &query_advisor_pg_packages
          - edb-pg{{ postgres_version }}-query-advisor
        RedHat: *query_advisor_pg_packages
        Ubuntu: *query_advisor_pg_packages
        SLES: *query_advisor_pg_packages
      epas:
        Debian: &query_advisor_as_packages
          - edb-as{{ postgres_version }}-query-advisor
        RedHat: *query_advisor_as_packages
        Ubuntu: *query_advisor_as_packages
        SLES: *query_advisor_as_packages
      pgextended:
        Debian: *query_advisor_pg_packages
        RedHat: *query_advisor_pg_packages
        Ubuntu: *query_advisor_pg_packages
        SLES: *query_advisor_pg_packages
      edbpge:
        Debian: &query_advisor_pge_packages
          - edb-postgresextended{{ postgres_version }}-query-advisor
        RedHat: *query_advisor_pge_packages
        Ubuntu: *query_advisor_pge_packages
        SLES: *query_advisor_pge_packages
    spl: query_advisor

  edb_wait_states:
    packages:
      postgresql:
        Debian: &debian_pg_edb_wait_states_packages
          - postgresql{{ postgres_version }}-edb-wait-states
        RedHat: &redhat_pg_edb_wait_states_packages
          - postgresql{{ postgres_version }}-edb_wait_states
        Ubuntu: *debian_pg_edb_wait_states_packages
        SLES: *redhat_pg_edb_wait_states_packages
      epas:
        Debian: &debian_as_edb_wait_states_packages
          - edb-as{{ postgres_version }}-server-edb-wait-states
        RedHat: &redhat_as_edb_wait_states_packages
          - edb-as{{ postgres_version }}-server-edb_wait_states
        Ubuntu: *debian_as_edb_wait_states_packages
        SLES: *redhat_as_edb_wait_states_packages
      pgextended:
        Debian: *debian_pg_edb_wait_states_packages
        RedHat: *redhat_pg_edb_wait_states_packages
        Ubuntu: *debian_pg_edb_wait_states_packages
        SLES: *redhat_pg_edb_wait_states_packages
      edbpge:
        Debian: &debian_pge_edb_wait_states_packages
          - edb-postgresextended-wait-states-{{ postgres_version }}
        RedHat: &redhat_pge_edb_wait_states_packages
           - edb-postgresextended{{ postgres_version }}-wait-states
        Ubuntu: *debian_pge_edb_wait_states_packages
        SLES: *redhat_pge_edb_wait_states_packages
    spl: edb_wait_states

  sql_profiler:
    packages:
      postgresql:
        Debian: &debian_pg_sql_profiler_packages
          - postgresql-{{ postgres_version }}-sqlprofiler
        RedHat: &redhat_pg_sql_profiler_packages
          - sqlprofiler_{{ postgres_version }}
        Ubuntu: *debian_pg_sql_profiler_packages
        SLES: *redhat_pg_sql_profiler_packages
      epas:
        Debian: &as_sql_profiler_packages
          - edb-as{{ postgres_version }}-server-sqlprofiler
        RedHat: *as_sql_profiler_packages
        Ubuntu: *as_sql_profiler_packages
        SLES: *as_sql_profiler_packages
      pgextended:
        Debian: *debian_pg_sql_profiler_packages
        RedHat: *redhat_pg_sql_profiler_packages
        Ubuntu: *debian_pg_sql_profiler_packages
        SLES: *redhat_pg_sql_profiler_packages
      edbpge:
        Debian: &debian_pge_sql_profiler_packages
          - edb-postgresextended-sqlprofiler-{{ postgres_version }}
        RedHat: &redhat_pge_sql_profiler_packages
           - edb-postgresextended{{ postgres_version }}-sqlprofiler
        Ubuntu: *debian_pge_sql_profiler_packages
        SLES: *redhat_pge_sql_profiler_packages
    spl: sql-profiler

  pg_failover_slots:
    packages:
      postgresql:
        Debian: &debian_pg_pg_failover_slots
          - edb-pg{{ postgres_version }}-pg-failover-slots-1
        RedHat: &redhat_pg_pg_failover_slots
          - edb-pg{{ postgres_version }}-pg-failover-slots1
        Ubuntu: *debian_pg_pg_failover_slots
        SLES: *redhat_pg_pg_failover_slots
      epas:
        Debian: &debian_as_pg_failover_slots
          - edb-as{{ postgres_version }}-pg-failover-slots-1
        RedHat: &redhat_as_pg_failover_slots
          - edb-as{{ postgres_version }}-pg-failover-slots1
        Ubuntu: *debian_as_pg_failover_slots
        SLES: *redhat_as_pg_failover_slots
      pgextended:
        Debian: *debian_pg_pg_failover_slots
        RedHat: *redhat_pg_pg_failover_slots
        Ubuntu: *debian_pg_pg_failover_slots
        SLES: *redhat_pg_pg_failover_slots
      edbpge:
        Debian: &debian_pge_pg_failover_slots
          - edb-postgresextended{{ postgres_version }}-pg-failover-slots-1
        RedHat: &redhat_pge_pg_failover_slots
          - edb-postgresextended{{ postgres_version }}-pg-failover-slots1
        Ubuntu: *debian_pge_pg_failover_slots
        SLES: *redhat_pge_pg_failover_slots
    spl: pg_failover_slots
    module: true

  # EDB Storage Pack
  autocluster:
    packages: &advanced_storage_pack_packages
      postgresql:
        Debian: &pg_advanced_storage_pack_packages
          - edb-pg{{ postgres_version }}-advanced-storage-pack
        RedHat: *pg_advanced_storage_pack_packages
        Ubuntu: *pg_advanced_storage_pack_packages
        SLES: *pg_advanced_storage_pack_packages
      epas:
        Debian: &as_advanced_storage_pack_packages
          - edb-as{{ postgres_version }}-advanced-storage-pack
        RedHat: *as_advanced_storage_pack_packages
        Ubuntu: *as_advanced_storage_pack_packages
        SLES: *as_advanced_storage_pack_packages
      pgextended:
        Debian: *pg_advanced_storage_pack_packages
        RedHat: *pg_advanced_storage_pack_packages
        Ubuntu: *pg_advanced_storage_pack_packages
        SLES: *pg_advanced_storage_pack_packages
      edbpge:
        Debian: &pge_advanced_storage_pack_packages
          - edb-postgresextended{{ postgres_version }}-advanced-storage-pack
        RedHat: *pge_advanced_storage_pack_packages
        Ubuntu: *pge_advanced_storage_pack_packages
        SLES: *pge_advanced_storage_pack_packages
    spl: autocluster

  refdata:
    packages: *advanced_storage_pack_packages
    spl: refdata

  bluefin:
    packages: *advanced_storage_pack_packages
    spl: bluefin


default_postgres_extensions:
  - pg_stat_statements
  - pg_freespacemap
  - pg_visibility
  - pageinspect
  - pgstattuple

default_pemagent_extensions:
  - sql_profiler
  - edb_wait_states
  - query_advisor

default_postgres_users: []
default_postgres_databases: []

# These parameters are scaled according to ansible_memtotal_mb. You can
# override either the ratio or the value explicitly.

shared_buffers_ratio: 0.25
shared_buffers_mb: null
effective_cache_size_ratio: 0.5
effective_cache_size_mb: null

default_log_destination: syslog
default_max_connections: 250
default_max_worker_processes: 16

default_password_encryption:
  "{{ postgres_version is version('10','>=')
      |ternary('scram-sha-256', 'md5') }}"
default_postgres_hba_local_auth_method: peer

default_barman_user: barman
default_barman_group: barman
default_barman_home: /var/lib/barman
default_barman_archive_command: "'barman-wal-archive {{ backup }} {{ inventory_hostname }} %p'"

default_failover_manager:
  epas: efm
  postgresql: repmgr
  edbpge: repmgr

default_etcd_peer_port: 2380
default_etcd_client_port: 2379
default_etcd_compaction_mode: revision
default_etcd_compaction_retention: 10

default_repmgr_conf_dir: "/etc/repmgr/{{ postgres_version }}"

default_bdr_version: 3
default_bdr_database: bdrdb
default_bdr_node_group: bdrgroup

default_postgres_install_dir: "/opt/postgres/{{ postgres_version }}"

default_haproxy_bind_address: 127.0.0.1
default_haproxy_port:
  postgresql: 5432
  epas: 5444
  edbpge: 5432
default_haproxy_read_only_port:
  postgresql: 5433
  epas: 5445
  edbpge: 5433
default_haproxy_stats_socket: /var/lib/haproxy/stats
default_harp_proxy_port: 6432

# By default, pgbouncer will forward all connections to 127.0.0.1:5432
# (which may be either postgres or haproxy that has been configured to
# forward connections to postgres); if pgbouncer_backend is set to the
# name of some instances, its postgres_port setting will be respected,
# as will max_connections to set pgbouncer_max_client_conn.

default_pgbouncer_auth_user: pgbouncer_auth_user
default_pgbouncer_backend: 127.0.0.1
default_pgbouncer_backend_port:
  postgresql: 5432
  epas: 5444
  edbpge: 5432
default_pgbouncer_max_client_conn: 100
default_pgbouncer_port: 6432
default_pgbouncer_server_login_retry: 0
default_pgbouncer_use_cert_authentication: false

# By default, we create a single wildcard entry under [databases], which
# forwards all connections to the pgbouncer_backend defined above. Set
# pgbouncer_databases to [{name: â¦, options: {â¦}}, â¦] to override this
# and install whatever entries you want. If left unspecified, host and
# port will be filled in with pgbouncer_backend/pgbouncer_backend_port
# under each entry's "options".

default_pgbouncer_databases:
  - name: "*"

default_harp_version: 2
default_harp_listen_port: 5442
default_harp_consensus_protocols:
  "2": etcd
default_harp_directories:
  "2": /etc/harp
default_harp_proxy_mode: builtin
default_harp_manager_user: harpmanager
default_harp_http_options:
  enable: false
  host: "{{ inventory_hostname }}"
  port: 8080
  secure: false
  probes:
    timeout: 10s

default_patroni_listen_port: 8008

default_build_path:
  - "{{ postgres_bin_dir }}"
  - /usr/lib64/ccache
  - /usr/lib/ccache
  - $PATH

default_efm_version: 4.9
default_efm_conf_dir: "/etc/edb/efm-{{ efm_version }}"
default_efm_bin_dir: "/usr/edb/efm-{{ efm_version }}/bin"
default_efm_bind_port: 7800

default_pem_base_dir: /usr/edb/pem
default_pem_agent_base_dir: /usr/edb/pem/agent
default_pem_agent_service_name: pemagent
default_pem_database: pem
default_pem_server_group: "PEM Server Directory"

default_pgd_proxy_home: /home/pgdproxy
default_pgd_proxy_config_directory: /etc/edb/pgd-proxy
default_pgd_proxy_options: {}
default_pgd_http_options:
  enable: false
  host: "{{ inventory_hostname }}"
  port: 8080
  secure: false
  probes:
    timeout: 10s
default_pgd_proxy_user: pgdproxy
default_pgd_proxy_group: pgdproxy

default_primary_slot_name: "tpa_{{ inventory_hostname|regex_replace('[^a-zA-Z0-9_]', '_') }}"

default_pgdcli_directory: /etc/edb/pgd-cli
