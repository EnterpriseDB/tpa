---

- name: Ensure that pgbench output directory exists locally
  local_action:
    module: file
    path: "{{ cluster }}/pgbench"
    state: directory

- name: Determine if pgbench -i was run already
  postgresql_query:
    conninfo: "dbname=postgres"
    query: >
      select count(*) as exists from information_schema.tables
      where table_name='pgbench_history'
  register: pgbench_history
  become_user: "{{ postgres_user }}"
  become: yes

- include_role: name=pgbench/init
  when:
    pgbench_history.exists == 0 and 'replica' not in role

- name: Run read/write pgbench
  include_tasks: pgbench.yml
  vars:
    pgbench_opts: -v -c 10 -j 5 -T 180
  when: >
    'replica' not in role

- name: Run read-only pgbench on replicas
  include_tasks: pgbench.yml
  vars:
    pgbench_opts: -n -c 10 -j 5 -T 180 -S
  when: >
    'replica' in role
