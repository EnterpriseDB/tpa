---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Raise BDR lock timeouts for pgbench -i
  postgresql_query:
    conninfo: "{{ dsn|dbname(pgbench_dbname) }}"
    autocommit: yes
    queries: "{{ query('flattened', timeout_queries) }}"
  become_user: "{{ postgres_user }}"
  become: yes
  vars:
    lock_name: >-
      {{ ['bdr_ddl', 'bdr_ddl', 'global'][bdr_major_version-1] }}_lock_timeout
    statement_timeout:
      text: "ALTER SYSTEM SET bdr.global_lock_statement_timeout TO '3600s'"
    timeout_queries:
      - text: "ALTER SYSTEM SET bdr.{{ lock_name }} TO '600s'"
      - "{{ (bdr_major_version == 3)|ternary(statement_timeout, []) }}"
      - text: SELECT pg_reload_conf()
  when: >
    'bdr' in role
    and pgbench_dbname == bdr_database
    and inventory_hostname == pgbench_bdr_init_instance|default(first_bdr_primary)

- name: Run pgbench -i -s {{ pgbench_scale_factor }} on database {{ pgbench_dbname }}
  command: >
    {{ postgres_bin_dir }}/pgbench -h {{ postgres_host }} -p {{ postgres_port }} -i -s {{ pgbench_scale_factor }} {{ pgbench_dbname }}
  register: pgbench_init
  become_user: "{{ postgres_user }}"
  become: true
  when: >
    'bdr' not in role or (
      pgbench_dbname == bdr_database
      and inventory_hostname == pgbench_bdr_init_instance|default(first_bdr_primary)
    )

- include_role: name=test tasks_from=output.yml
  vars:
    output_file: "{{ pgbench_output }}"
    content: |
      {{ pgbench_init.stderr }}
  when:
    pgbench_init is not skipped
    and pgbench_output|default('') != ''

- name: Reset BDR lock timeouts to defaults after pgbench -i
  postgresql_query:
    conninfo: "{{ dsn|dbname(pgbench_dbname) }}"
    autocommit: yes
    queries: "{{ query('flattened', reset_queries) }}"
  become_user: "{{ postgres_user }}"
  become: yes
  vars:
    lock_name: >-
      {{ ['bdr_ddl', 'bdr_ddl', 'global'][bdr_major_version-1] }}_lock_timeout
    statement_timeout:
      text: "ALTER SYSTEM SET bdr.global_lock_statement_timeout TO default"
    reset_queries:
      - "{{ (bdr_major_version == 3)|ternary(statement_timeout, []) }}"
      - text: "ALTER SYSTEM SET bdr.{{ lock_name }} TO default"
      - text: SELECT pg_reload_conf()
  when: >
    'bdr' in role
    and pgbench_dbname == bdr_database
    and inventory_hostname == pgbench_bdr_init_instance|default(first_bdr_primary)

- name: Wait for pgbench -i to replicate to BDR instances
  postgresql_query:
    conninfo: "{{ dsn|dbname(pgbench_dbname) }}"
    query: >
      select bdr.wait_slot_confirm_lsn(NULL, NULL)
  become_user: "{{ postgres_user }}"
  become: yes
  when: >
    'bdr' in role
    and pgbench_dbname == bdr_database
