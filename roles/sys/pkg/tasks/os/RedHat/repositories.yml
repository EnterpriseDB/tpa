---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Install gpg
  raw: command -v gpg >/dev/null 2>&1 || yum -y install gnupg2; true
  environment: {}
  register: gpg_install
  changed_when: >
    gpg_install is successful
    and gpg_install.stdout.strip() != ''
    and 'already installed' not in gpg_install.stdout

- name: Install curl
  raw: command -v curl >/dev/null 2>&1 || yum -y install curl; true
  environment: {}
  register: curl_install
  changed_when: >
    curl_install is successful
    and curl_install.stdout.strip() != ''
    and 'already installed' not in curl_install.stdout

- set_fact:
    yum_repository_list: "{{
      yum_repository_list|default([])|union(['EDB'])
    }}"
  when:
    postgresql_flavour == 'epas'
    and postgres_installation_method == 'pkg'

- name: Ensure repository list is defined
  assert:
    msg: "Repository {{ item }} is not defined in yum_repositories"
    that: item in default_yum_repositories|combine(yum_repositories)
  with_items: "{{ yum_repository_list }}"

- name: Install YUM repository packages
  yum:
    name: "{{ r.rpm_url }}"
    state: present
    disable_gpg_check: yes
  with_items: "{{ yum_repository_list }}"
  vars:
    repos: "{{ default_yum_repositories|combine(yum_repositories) }}"
    r: "{{ repos[item] }}"

- name: Ensure edb.repo is not world-readable
  file:
    path: /etc/yum.repos.d/edb.repo
    mode: 0600
  when: >
    'EDB' in yum_repository_list

# We edit only the [edb] repo entry, because lineinfile will change only
# one line matching the regexp. The edb-testing repo is disabled anyway.

- name: Configure authentication for EDB repository
  lineinfile:
    path: /etc/yum.repos.d/edb.repo
    regexp: '^baseurl=https://([^:]*):([^@]*)@yum.enterprisedb.com(/edb/.*)$'
    line: >-
      baseurl=https://{{ _credentials }}@yum.enterprisedb.com\3
    backrefs: yes
    state: present
  vars:
    _file: "{{ lookup('env', 'EDB_REPO_CREDENTIALS_FILE') }}"
    _credentials: "{{ lookup('file', _file) }}"
  when: >
    'EDB' in yum_repository_list

# Following the instructions in
# https://wiki.postgresql.org/wiki/YUM_Installation, we exclude
# postgresql from the base repositories.

- name: Exclude postgresql packages from the base repository
  ini_file:
    dest: /etc/yum/pluginconf.d/rhnplugin.conf
    section: main
    option: exclude
    value: "postgresql* barman* repmgr*"
  when: ansible_distribution_id == "rhel"

- name: Exclude postgresql packages from CentOS base repositories
  ini_file:
    dest: "/etc/yum.repos.d/{{ item.0.file }}"
    create: no
    section: "{{ item.1 }}"
    option: exclude
    value: "postgresql* barman* repmgr*"
  with_nested_dependents:
  - base_repos[ansible_distribution_major_version|int]
  - item.0.sections
  when: ansible_distribution_id == "centos"
  register: exclude
  failed_when:
    exclude is not successful and exclude.rc != 257
  vars:
    base_repos:
      7:
      - file: CentOS-Base.repo
        sections:
        - base
        - updates
      8:
      - file: CentOS-Base.repo
        sections:
        - BaseOS
      - file: CentOS-AppStream.repo
        sections:
        - AppStream
      - file: CentOS-Linux-BaseOS.repo
        sections:
        - baseos
      - file: CentOS-Linux-AppStream.repo
        sections:
        - appstream

# The pgbouncer package from EPEL depends on python-psycopg2, which
# conflicts with our python2-psycopg2 package.

- name: Exclude pgbouncer package from the EPEL repository
  ini_file:
    dest: /etc/yum.repos.d/epel.repo
    section: epel
    option: exclude
    value: "pgbouncer*"
  when: >
    'EPEL' in yum_repository_list

- name: Disable builtin postgresql module for DNF
  shell: >
    if [[ -d /etc/dnf/modules.d ]]; then
      if ! grep -qx state=disabled {{ _module }}; then
        dnf -qy module disable postgresql;
        echo ok;
      fi;
    fi
  args:
    executable: /bin/bash
  vars:
    _module: /etc/dnf/modules.d/postgresql.module
  register: dnfmod
  changed_when: >
    dnfmod.stdout.strip() == 'ok'

# The PGDG repo RPM installs a pgdg-redhat-all.repo file that contains
# entries for all available repositories for every version of Postgres,
# with multiple repositories enabled by default.
#
# This is, unsurprisingly, a bad idea. We want to enable the entries
# relevant to our desired Postgres version, and disable other entries,
# without knowing in advance which entries there are or which ones are
# enabled already, and preferably without doing too much redudant work
# (because loops are expensive).
#
# We fetch a list of all entries that are enabled (some of which we may
# want to disable) as well as all pgdgNN repositories for the version we
# want to enable.

- name: Retrieve list of PGDG repository entries
  shell: >
    test -f {{ _repo }} &&
    awk 'match($0, /^\[(.*)\]$/, t) { repo = t[1] }
    match($0, /^\[({{ _wanted }}.*)\]$/, t) { print t[1] }
    /^enabled *= *1$/ { print repo }' {{ _repo }}|sort -u
  args:
    executable: /bin/bash
  register: interesting_pgdg_repos
  changed_when: false
  when: >
    'PGDG' in yum_repository_list
  vars:
    _repo: /etc/yum.repos.d/pgdg-redhat-all.repo
    _wanted: "pgdg{{ postgres_versionNN }}"
  check_mode: no

- name: Disable PGDG repos for versions other than {{ postgres_version }}
  ini_file:
    dest: /etc/yum.repos.d/pgdg-redhat-all.repo
    section: "{{ item }}"
    option: enabled
    value: "{{ (item in all_wanted_pgdg_repos)|ternary('1', '0') }}"
  with_items:
    - "{{ interesting_pgdg_repos.stdout_lines }}"
    - pgdg-common
  when: >
    'PGDG' in yum_repository_list
  vars:
    wanted_pgdg_repo: "pgdg{{ postgres_versionNN }}"
    all_wanted_pgdg_repos:
      - "{{ wanted_pgdg_repo }}"
      - "{{ wanted_pgdg_repo }}-updates-debuginfo"
      - pgdg-common

- name: Exclude barman-related packages from PGDG repos
  ini_file:
    dest: /etc/yum.repos.d/pgdg-redhat-all.repo
    section: pgdg-common
    option: exclude
    value: "barman* python3-barman"
  when: >
    'PGDG' in yum_repository_list

- name: Exclude psycopg2 packages from PGDG repos
  ini_file:
    dest: /etc/yum.repos.d/pgdg-redhat-all.repo
    section: "pgdg{{ postgres_versionNN }}"
    option: exclude
    value: python-psycopg2 python2-psycopg2 python3-psycopg2
  when: >
    'PGDG' in yum_repository_list

- set_fact:
    _2q_repositories: []

- name: Enumerate 2ndQuadrant repositories
  set_fact:
    _2q_repositories: "{{
      _2q_repositories|union([{
        'url': url,
        'file': file,
        'repo': item
      }])
    }}"
  with_items:
    - dl/default/release
    - "{{ tpa_2q_repositories|default([]) }}"
  when:
    tpa_2q_repositories is not defined or
    tpa_2q_repositories is not empty
  vars:
    token: "{{ lookup('env', 'TPA_2Q_SUBSCRIPTION_TOKEN') }}"
    volatile: "{{ use_volatile_subscriptions|ternary('/volatile', '') }}"
    _flavour: "{{ postgresql_flavour|default('postgresql') }}"
    _repopg: "{{ (_flavour == 'postgresql-bdr')|ternary('pgbdr', 'pg') }}"
    version_tag: >-
      {{ (_flavour == 'postgresql-bdr')|ternary('bdr9.4', postgres_version) }}
    urltemplate: "{{
      (item == 'dl/default/release')|ternary(
        'https://access.2ndquadrant.com/api/repository/{label}/{version}/rpm{volatile}',
        'https://access.2ndquadrant.com/api/repository/{token}/{label}/{version}/rpm{volatile}'
      )
    }}"
    url: >-
      {{ urltemplate.format(token=token, label=item, version=version_tag, volatile=volatile) }}
    file: "/etc/yum.repos.d/2ndquadrant-{{ item|replace('/', '-') }}-{{ _repopg }}{{ postgres_version }}.repo"

- name: Install 2ndQuadrant repositories
  shell: >
    curl -sS {{ item.url }} | bash
  args:
    executable: /bin/bash
    creates: "{{ use_volatile_subscriptions|ternary(omit, item.file) }}"
  register: reposub
  failed_when: >
    reposub.rc != 0 or 'error: ' in reposub.stdout.lower()
  with_items: "{{ _2q_repositories }}"
  loop_control:
    label: >-
      {{ item.repo }}

- name: Exclude lua packages from 2ndQuadrant products/bdr3/release repo
  ini_file:
    dest: "/etc/yum.repos.d/2ndquadrant-products-bdr3-release-pg{{ postgres_versionNN }}.repo"
    section: "2ndquadrant-products-bdr3-release-pg{{ postgres_versionNN }}"
    option: exclude
    value: lua*
  when: >
    'products/bdr3/release' in tpa_2q_repositories|default([])
    and ansible_distribution_major_version|int == 8

- include_tasks: repository-cleanup.yml
  vars:
    repository_path: /etc/yum.repos.d
    repository_files: "{{ _2q_repositories|map(attribute='file')|list }}"
