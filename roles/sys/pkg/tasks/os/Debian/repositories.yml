---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Install apt-transport-https to support https repositories
  raw: apt-get -q -y install apt-transport-https
  environment: {}
  register: ath_install
  changed_when: >
    ath_install is successful
    and 'already the newest version' not in ath_install.stdout

- name: Install curl to fetch repository files
  raw: command -v curl >/dev/null 2>&1 || apt-get -q -y install curl; true
  environment: {}
  register: curl_install
  changed_when: >
    curl_install is successful
    and curl_install.stdout.strip() != ''
    and 'already the newest version' not in curl_install.stdout

- name: Install gpg to install apt repository keys
  raw: command -v gpg >/dev/null 2>&1 || apt-get -q -y install gnupg2; true
  environment: {}
  register: gpg_install
  changed_when: >
    gpg_install is successful
    and gpg_install.stdout.strip() != ''
    and 'already the newest version' not in gpg_install.stdout

- name: Ensure repository list is defined
  assert:
    msg: "Repository {{ item }} is not defined in apt_repositories"
    that: item in default_apt_repositories|combine(apt_repositories)
  with_items: "{{ apt_repository_list }}"

- name: Install apt repository signing keys
  apt_key:
    id: "{{ r.key_id }}"
    url: "{{ r.key_url }}"
    state: present
  with_items: "{{ apt_repository_list }}"
  vars:
    repos: "{{ default_apt_repositories|combine(apt_repositories) }}"
    r: "{{ repos[item] }}"

- name: Install apt repositories
  apt_repository:
    repo: "{{ r.repo }}"
    state: present
    update_cache: no
  with_items: "{{ apt_repository_list }}"
  vars:
    repos: "{{ default_apt_repositories|combine(apt_repositories) }}"
    r: "{{ repos[item] }}"

- name: Raise pin priority for 2ndQuadrant packages
  template:
    src: 2ndquadrant-pins.j2
    dest: /etc/apt/preferences.d/2ndquadrant-pins
    owner: root
    group: root
    mode: 0644

- set_fact:
    _2q_repositories: []

- name: Enumerate 2ndQuadrant repositories
  set_fact:
    _2q_repositories: "{{
      _2q_repositories|union([{
        'url': url,
        'file': file,
        'repo': item
      }])
    }}"
  with_items:
    - dl/default/release
    - "{{ tpa_2q_repositories|default([]) }}"
  when:
    tpa_2q_repositories is not defined or
    tpa_2q_repositories is not empty
  vars:
    token: "{{ lookup('env', 'TPA_2Q_SUBSCRIPTION_TOKEN') }}"
    volatile: "{{ use_volatile_subscriptions|ternary('/volatile', '') }}"
    urltemplate: "{{
      (item == 'dl/default/release')|ternary(
        'https://access.2ndquadrant.com/api/repository/{label}/deb{volatile}',
        'https://access.2ndquadrant.com/api/repository/{token}/{label}/deb{volatile}'
      )
    }}"
    url: >-
      {{ urltemplate.format(token=token, label=item, volatile=volatile) }}
    file: "/etc/apt/sources.list.d/2ndquadrant-{{ item|replace('/', '-') }}.list"

- name: Install 2ndQuadrant repositories
  shell: >
    curl -sS {{ item.url }} | bash
  args:
    executable: /bin/bash
    creates: "{{ use_volatile_subscriptions|ternary(omit, item.file) }}"
  register: reposub
  failed_when: >
    reposub.rc != 0 or 'error: ' in reposub.stdout.lower()
  with_items: "{{ _2q_repositories }}"

- include_tasks: repository-cleanup.yml
  vars:
    repository_path: /etc/apt/sources.list.d
    repository_files: "{{ _2q_repositories|map(attribute='file')|list }}"
  tags: always

- name: Update apt cache
  apt: update_cache=yes
