---

# Given a block device name and a mountpoint, does everything required
# to make the volume available for use immediately and after subsequent
# reboots.

- name: Ensure filesystem configuration is specified
  assert:
    msg: "Please specify at least the device name and mountpoint"
    that:
      - device is defined
      - mountpoint is defined

# device is what the caller specified; _device is what we use
# internally, and is subject to being modified by luks.yml.

- name: Record device name
  set_fact:
    _device: "{{ device }}"

- block:
    - name: Set up encryption on {{ device }}
      include: "{{ encryption }}.yml"
      vars:
        luks_device: "{{ _device }}"
    - name: Set noauto in mount options for {{ _device }}
      set_fact:
        mountopts: "noauto{% if mountopts %},{{mountopts}}{% endif -%}"
      when: >
        'noauto' not in mountopts
  when: encryption is defined

- name: Set readahead on {{ _device }} to {{ '%d' % ((readahead|int)/2048) }}MB
  shell: >
    blockdev --getra "{{ _device }}" &&
    blockdev --setra "{{ readahead }}" "{{ _device }}"
  register: ra
  changed_when: >
    ra|succeeded and ra.stdout != readahead

- name: Set readahead on {{ _device }} at startup
  lineinfile:
    dest: /etc/tpa/rc.local
    line: >-
      blockdev --setra "{{ readahead }}" "{{ _device }}"
    state: present
    insertbefore: EOF

- name: Create filesystem on {{ _device }}
  filesystem:
    dev: "{{ _device }}"
    fstype: "{{ fstype }}"
    opts: "{{ fsopts|default(omit) }}"

- name: Mount {{ _device }} under {{ mountpoint }}
  mount:
    src: "{{ _device }}"
    name: "{{ mountpoint }}"
    fstype: "{{ fstype }}"
    opts: "{{ mountopts }}"
    state: mounted

# TODO: If the caller specifies an SELinux context, we should use
# semanage and restorecon to set the context on the mountpoint:
#
# $ semanage fcontext -a -t postgresql_db_t "/opt/postgresql(/.*)?"
# $ restorecon -R -v /opt/postgresql
#
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/SELinux_Users_and_Administrators_Guide/sect-Managing_Confined_Services-PostgreSQL-Configuration_Examples.html
