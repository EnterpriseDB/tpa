---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- block:
  - name: Wait for bdr_camo_client to complete
    async_status: jid="{{ client_run.ansible_job_id }}"
    register: client
    until: client.finished
    retries: 600
    ignore_errors: yes
    become_user: "{{ postgres_user }}"
    become: yes

  - name: Save bdr_camo_client output
    fetch:
      src: "{{ bdr_camo_client_output }}"
      dest: "{{ output_dir }}/{{ inventory_hostname }}/{{ bdr_camo_client_output|basename }}"
      flat: yes

  - name: Save run_time_check output
    fetch:
      src: "{{ run_time_output }}"
      dest: "{{ output_dir }}/{{ inventory_hostname }}/{{ run_time_output|basename }}"
      flat: yes

  - name: Fail if bdr_camo_client failed
    fail:
      msg: "bdr_camo_client failed"
    when: client is not successful
    tags: [camo, fail, upgrade]

  - name: get LSN after bdr_camo_client run
    postgresql_query:
      conninfo: "{{ ping_conninfo }}"
      queries:
      - text: >
          SELECT pg_current_wal_lsn() as lsn
    register: target
    become_user: "{{ postgres_user }}"
    become: yes
  vars:
    ping_conninfo: "{{ hostvars[ping].bdr_node_dsn }}"
  when: >
    inventory_hostname == tester_instance

- block:
  - name: wait for BDR instances to apply changes
    postgresql_query:
      conninfo: "{{ bdr_node_dsn }}"
      queries:
      - text: >
          SELECT pg_replication_origin_progress(%s, true) >= %s AS completed
        args:
        - "bdr_bdrdb_bdrgroup_{{ hostvars[ping].bdr_node_name }}"
        - "{{ hostvars[tester_instance].target.lsn }}"
    register: done
    until: done.completed
    retries: 60
    become_user: "{{ postgres_user }}"
    become: yes
  when:
    inventory_hostname in groups[bdr_node_group] and  inventory_hostname != ping
