---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

- include_tasks: camo/bdr_camo_client_start.yml

- set_fact:
    crash: "{{ crash|default('partner') }}"
- set_fact:
    crash_node: "{{ ping }}"
  when: crash == 'origin'
- set_fact:
    crash_node: "{{ pong }}"
  when: crash == 'partner'

- name: Set default failure timeouts for all tests
  set_fact:
    restart_after: "{{ restart_after|default('100') }}"
    powerfail_timeout: "{{ powerfail_timeout|default('100') }}"
    partition_timeout: "{{ partition_timeout|default('100') }}"

- name: Cause failure {{ failure }} on CAMO {{crash}} {{ crash_node }}
  include_role: name=test tasks_from="failures/{{ failure }}.yml"
  when: >
    inventory_hostname == crash_node
# In case of origin crash, CAMO xacts failover to its partner.
# So set new origin as pong. Note, this failover happens only when client runs via haproxy.
# Also in case of network partitioning this failover is not observed, so origin remains the same.
- set_fact:
    origin: "{{ ping }}"
    partner: "{{ pong }}"
- set_fact:
    origin: "{{ pong }}"
    partner: "{{ ping }}"
  when: crash == 'origin' and (failure == "postgres-down" or failure == "powerfail") and via_haproxy

# Lets expect partner to recover after defined timeout + 30s
- set_fact:
    wait_for_partner: "{{ hostvars[crash_node].powerfail_timeout|int + 30 }}"
  when: failure == "powerfail"
- set_fact:
    wait_for_partner: "{{ hostvars[crash_node].partition_timeout|int + 30 }}"
  when: failure == "partition"
- set_fact:
    wait_for_partner: "{{ hostvars[crash_node].restart_after|int +30 }}"
  when: failure == "postgres-down"


- include_tasks: camo/bdr_camo_client_finish.yml

- include_tasks: consistency_checks.yml

- include_tasks: camo/bdr_camo_client_teardown.yml
