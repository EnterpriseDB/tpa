---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

# We set "camo_node_group" (like "bdr_node_group") based on the sorted
# hostnames of CAMO partners, and create inventory groups based on the
# value, such that partners a and b will be in a group named camo_a_b.

- set_fact:
    camo_node_group: "camo_{{ [inventory_hostname,bdr_node_camo_partner]|sort|join('_') }}"
  when: bdr_node_camo_partner is defined
  tags: always

- name: Create group(s) based on the value of camo_node_group
  group_by:
    key: "{{ camo_node_group }}"
  when: camo_node_group is defined
  tags: always

# For now, we want to run tests only against one CAMO pair from another
# BDR instance (we want a BDR instance so that it has bdr_camo_client
# installed; other than that, any instance would do).

- set_fact:
    all_camo_groups: "{{ groups.keys()|select('startswith', 'camo_')|list }}"
  tags: always

- set_fact:
    possible_testers: "{{ groups|members_of('role_bdr', not_in=all_camo_groups)|list }}"
  tags: always

# If there are no CAMO groups, then we don't have to run any tests here.
# If there are CAMO groups, there must be at least one instance to run
# the tests from.

- assert:
    msg: "CAMO groups found, but no instances to run tests from"
    that: all_camo_groups is empty or possible_testers is not empty
  tags: always

# We now run bdr_camo_client on the tester_instance against the CAMO
# partners, and cause the first partner to undergo various failures
# during the run.

- name: Run bdr_camo_client tests
  block:
    - include_tasks: camo/bdr_camo_client.yml
      with_items: "{{ failures }}"
      loop_control:
        loop_var: failure
      vars:
        camo_test_group: "{{ all_camo_groups|first }}"
        tester_instance: "{{ possible_testers|first }}"
        nondestructive_failures:
          - none
        destructive_failures:
          - none
          - powerfail
          - partition
        failures: "{{
          destroy_cluster|default(False)|ternary(destructive_failures, nondestructive_failures)
        }}"
      when:
        inventory_hostname in groups[bdr_node_group] or
        inventory_hostname == tester_instance
  when:
    all_camo_groups is not empty
  tags: always
