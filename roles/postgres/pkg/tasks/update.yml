---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# The BDR4 packages are meant to replace (not coexist with) BDR3 and
# pglogical3 packages. The BDR4 package dependencies do reflect this,
# and we should be able to install them and have the package manager
# remove the older packages. Unfortunately, the Postgres and Postgres
# Extended builds of BDR3/pglogical3 both use the same package names,
# and declare the same (Postgres) dependencies, and the package manager
# can't choose between the multiple available upgrade paths, so we have
# to remove BDR3/pglogical3 explicitly before installing BDR4.

- include_tasks: list-packages.yml
  vars:
    list_varname: _all_postgres_packages

- name: Set target_bdr_version
  set_fact:
    target_bdr_version: "{{ bdr_version }}"

#we need this due to pgextended to edbpge switch for bdr3 to 5 upgrade.
- name: Set initial postgres family for pgd5 target
  set_fact:
    init_postgres_family: "{{ (postgres_flavour != 'edbpge')|ternary(postgres_family,'postgresql') }}"
    init_postgres_flavour: "{{ (postgres_flavour != 'edbpge')|ternary(postgres_flavour,'pgextended') }}"
    init_postgres_package_name: "{{ (postgres_flavour != 'edbpge')|ternary(postgres_package_name,'postgresql') }}"
  when: >
    target_bdr_version is version('5','>=')

- name: Set initial postgres family
  set_fact:
    init_postgres_family: "{{ postgres_family }}"
    init_postgres_flavour: "{{ postgres_flavour }}"
    init_postgres_package_name: "{{ postgres_package_name }}"
  when: >
    target_bdr_version is version('5','<')

- name: Remove pgextended when switching to edbpge
  block:
  - name: Fetch pgextended packages
    include_tasks: list-packages.yml
    vars:
      list_varname: _all_pgextended_packages
      bdr_version: 3
      postgres_flavour: "{{ init_postgres_flavour }}"
      postgres_family: "{{ init_postgres_family }}"
      postgres_package_name: "{{ init_postgres_package_name }}"

  - name: Remove pgextended packages
    package:
      name: "{{ _all_pgextended_packages|default([]) }}"
      state: absent
  when:
  - target_bdr_version is version('5','>=')
  - init_postgres_flavour == 'pgextended'
  - postgres_flavour == 'edbpge'

- name: BDR3 package removal
  block:
  - name: Fetch BDR3-related packages
    include_tasks: list-bdr-packages.yml
    vars:
      list_varname: _all_bdr3_packages
      bdr_version: 3
      postgres_flavour: "{{ init_postgres_flavour }}"
      postgres_family: "{{ init_postgres_family }}"
      postgres_package_name: "{{ init_postgres_package_name }}"

  - name: Remove BDR3-related packages when running major version upgrade from bdr3
    package:
      name: "{{ _all_bdr3_packages|default([]) }}"
      state: absent
  when:
  - "'bdr' in role"
  - upgrade_from|int == 3
  - target_bdr_version is version('3','>')

- name: BDR4 package removal
  block:
  - name: Fetch BDR4-related packages
    include_tasks: list-bdr-packages.yml
    vars:
      list_varname: _all_bdr4_packages
      bdr_version: 4

  - name: Remove BDR4-related packages when running major version upgrade from bdr4
    package:
      name: "{{ _all_bdr4_packages|default([]) }}"
      state: absent
  when:
  - "'bdr' in role"
  - upgrade_from|int == 4
  - target_bdr_version is version('4','>')

- name: Install latest Postgres packages
  package:
    name: "{{ _all_postgres_packages }}"
    state: "{{ _state }}"
  vars:
    _state: "{{
        (postgres_package_version is not defined and
         pglogical_package_version is not defined and
         bdr_package_version is not defined)
        |ternary('latest', 'present')
      }}"
  notify:
    - Note Postgres restart required
