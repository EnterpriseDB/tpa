---

- name: Set the DSN for each BDR instance
  set_fact:
    bdr_node_dsn: >-
      host={{ inventory_hostname }}
      port={{ postgres_port }}
      dbname={{ bdr_database }}
      user={{ postgres_user }}

- name: Create BDR group database
  postgresql_db:
    name: "{{ bdr_database }}"
    owner: "{{ postgres_user }}"
    state: present
  become_user: "{{ postgres_user }}"
  become: yes

- name: Check if the BDR node has been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    query: >
      SELECT node_id FROM bdr.node WHERE dbname = '{{ bdr_database }}'
  register: node_id
  become_user: "{{ postgres_user }}"
  become: yes

- name: Create BDR node if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    query: >
      SELECT bdr.create_node(
        node_name := '{{ inventory_hostname }}',
        local_dsn := '{{ bdr_node_dsn }}'
      )
  when:
    node_id.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

- name: Create group(s) based on the value of bdr_node_group
  group_by:
    key: "{{ bdr_node_group }}"
  when: bdr_node_group is defined

- name: Check if the BDR groups have been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    query: >
      SELECT node_group_id FROM bdr.node_group WHERE node_group_name = '{{ bdr_node_group }}'
  register: node_group_id
  when:
    bdr_node_group is defined
  become_user: "{{ postgres_user }}"
  become: yes

- name: Create BDR node groups if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    query: >
      SELECT bdr.create_node_group(node_group_name := '{{ bdr_node_group }}')
  when:
    groups[bdr_node_group]|first == inventory_hostname
    and node_group_id.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

- name: Join BDR node groups and wait for completion
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT bdr.join_node_group(join_target_dsn := %s)
        args:
          - "{{ hostvars[first].get('bdr_node_dsn') }}"
      - text: SELECT bdr.wait_for_join_completion()
  when:
    groups[bdr_node_group]|first != inventory_hostname
    and node_group_id.rowcount == 0
  vars:
    first: "{{ groups[bdr_node_group]|first }}"
  become_user: "{{ postgres_user }}"
  become: yes
