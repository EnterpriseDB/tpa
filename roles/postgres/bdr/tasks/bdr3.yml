---

# Copyright © 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Check if the BDR node has been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT node_id FROM bdr.node WHERE dbname = %s
        args:
          - "{{ bdr_database }}"
  register: node_id
  become_user: "{{ postgres_user }}"
  become: yes

- name: Include bdr-pre-node-creation hook
  include_tasks: "{{ hook }}"
  when:
    node_id.rowcount == 0 and
    lookup('first_found', dict(files=hook, skip=True))
  vars:
    hook: "{{ cluster_dir }}/hooks/bdr-pre-node-creation.yml"
  tags: always

- name: Create BDR node if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT bdr.create_node(node_name := %s, local_dsn := %s)
        args:
          - "{{ inventory_hostname }}"
          - "{{ bdr_node_dsn }}"
  when:
    node_id.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

# We check bdr.node_group on every node. If the entry doesn't exist, it
# means that the node must either create or join the BDR group, based on
# its position.

- name: Check if the BDR groups have been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT node_group_id FROM bdr.node_group WHERE node_group_name = %s
        args:
          - "{{ bdr_node_group }}"
  register: node_group_id
  become_user: "{{ postgres_user }}"
  become: yes

# Now the first node creates the group.

- name: Identify logical standby nodes
  set_fact:
    bdr_node_pause_in_standby: "{{
      bdr_node_pause_in_standby|default('readonly' in role)
    }}"

- name: Create BDR node groups if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT bdr.create_node_group(node_group_name := %s)
        args:
          - "{{ bdr_node_group }}"
  when:
    inventory_hostname == first_primary and
    node_group_id.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

- include_tasks: clean.yml
  when:
    inventory_hostname != first_primary and
    node_group_id.rowcount == 0
  tags: always

- name: Include bdr-post-group-creation hook
  include_tasks: "{{ hook }}"
  when:
    node_group_id.rowcount == 0 and
    lookup('first_found', dict(files=hook, skip=True))
  vars:
    hook: "{{ cluster_dir }}/hooks/bdr-post-group-creation.yml"
  tags: always

# The remaining hosts join the group… but they must do so one at a time,
# because BDR does not support concurrent group joins (not in version 3,
# nor in any earlier versions).
#
# What we would like to do here is to set «serial: 1» on the query task,
# so that we wait for the task to finish on one host before moving on to
# the next host. But serial is not supported as a task attribute, so we
# have to (write a strategy plugin or) use a loop to get the equivalent
# serial behaviour.

- name: Join BDR node groups
  include_tasks: bdr3-join.yml
  with_items: >
    {{ groups[bdr_node_group]|difference([first_primary]) }}
  loop_control:
    loop_var: bdr_node
  when:
    inventory_hostname == first_primary and
    hostvars[bdr_node].node_group_id.rowcount == 0
  tags: always
