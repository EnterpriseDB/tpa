---

# Copyright © 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Check if the BDR node has been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT node_id FROM bdr.node WHERE dbname = %s
        args:
          - "{{ bdr_database }}"
  register: node_id
  become_user: "{{ postgres_user }}"
  become: yes

- name: Include bdr-pre-node-creation hook
  include_tasks: "{{ hook }}"
  when:
    node_id.rowcount == 0 and
    lookup('first_found', dict(files=hook, skip=True))
  vars:
    hook: "{{ cluster_dir }}/hooks/bdr-pre-node-creation.yml"
  tags: always

- name: Create BDR node if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT bdr.create_node(node_name := %s, local_dsn := %s)
        args:
          - "{{ bdr_node_name }}"
          - "{{ bdr_node_dsn }}"
  when:
    node_id.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

# We check bdr.node_group on every node. If the entry doesn't exist, it
# means that the node must either create or join the BDR group, based on
# its position.

- name: Check if the BDR groups have been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT node_group_id FROM bdr.node_group WHERE node_group_name = %s
        args:
          - "{{ bdr_node_group }}"
  register: node_group_id
  become_user: "{{ postgres_user }}"
  become: yes

# Now the first node creates the group.

- name: Identify logical standby nodes
  set_fact:
    bdr_node_pause_in_standby: "{{
      bdr_node_pause_in_standby|default('readonly' in role)
    }}"

- name: Create BDR node groups if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT bdr.create_node_group(node_group_name := %s)
        args:
          - "{{ bdr_node_group }}"
  when:
    inventory_hostname == first_bdr_primary and
    node_group_id.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

- name: Clean up bdr database before group join
  include_tasks: clean.yml
  when:
    inventory_hostname != first_bdr_primary and
    node_group_id.rowcount == 0
  tags: always

- name: Include bdr-post-group-creation hook
  include_tasks: "{{ hook }}"
  when:
    node_group_id.rowcount == 0 and
    lookup('first_found', dict(files=hook, skip=True))
  vars:
    hook: "{{ cluster_dir }}/hooks/bdr-post-group-creation.yml"
  tags: always

# The first_bdr_primary has now created the group, and the remaining members
# of the same bdr_node_group must join the group.
#
# BDR does not support concurrent group joins, so we can't run this task
# in parallel on all the members of the group. Failing that, it would be
# nice to set «serial: 1» on this task, but serial is not supported as a
# task attribute. We use a loop to get the equivalent serial behaviour,
# executing the task on first_bdr_primary, but connecting to each instance
# in turn to issue the bdr.join_node_group() query.

- include_tasks: bdr3-join.yml
  when:
    inventory_hostname == first_bdr_primary
  tags: always
