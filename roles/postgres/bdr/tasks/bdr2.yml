---

# Copyright © 2ndQuadrant Limited <info@2ndquadrant.com>

- name: Check if the BDR group has been created already
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT node_name FROM bdr.bdr_nodes WHERE node_name = %s
        args:
          - "{{ inventory_hostname }}"
  register: node
  become_user: "{{ postgres_user }}"
  become: yes

- name: Create the BDR group if necessary
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    queries:
      - text: SELECT bdr.bdr_group_create(local_node_name := %s, node_external_dsn := %s)
        args:
          - "{{ inventory_hostname }}"
          - "{{ bdr_node_dsn }}"
  when:
    inventory_hostname == first_primary and
    node.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

- name: Wait for the creating node to become ready
  postgresql_query:
    conninfo: '{{ bdr_node_dsn }}'
    query: >-
      SELECT bdr.bdr_node_join_wait_for_ready()
  when:
    inventory_hostname == first_primary and
    node.rowcount == 0
  become_user: "{{ postgres_user }}"
  become: yes

- include_tasks: clean.yml
  when:
    inventory_hostname != first_primary and
    node.rowcount == 0
  tags: always

# The remaining hosts join the group… but they must do so one at a time,
# because BDR does not support concurrent group joins (not in version 3,
# nor in any earlier versions).

- name: Join BDR groups on the other nodes
  include_tasks: bdr2-join.yml
  with_items: >
    {{ groups[bdr_node_group]|difference([first_primary]) }}
  loop_control:
    loop_var: bdr_node
  when:
    inventory_hostname == first_primary and
    hostvars[bdr_node].node.rowcount == 0
  tags: always
