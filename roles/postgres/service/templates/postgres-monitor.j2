#!/usr/bin/env python
#
# This script waits until Postgres is accepting connections and returns
# success as quickly as possible after this happens, or fails if it is
# convinced that it will not happen.
#
# We try to connect (and must ignore the first error, because although
# we were invoked after postgres, it's entirely likely that it has not
# yet started listening on 5432 when we first check), and keep trying
# periodically so long as we receive only 'database is starting up'
# errors that we expect to go away eventually.
#
# In an ideal world, we would stop trying if we could establish that the
# recovery was not making progress, but for now, we resign ourselves to
# waiting indefinitely.

from __future__ import absolute_import, division, print_function

import sys, time
import psycopg2

def main():
    first = 1

    while True:
        err = None

        try:
            psycopg2.connect('').close()
        except Exception as e:
            err = str(e).strip()
            if not recoverable(err) and not first:
                print('exiting: %s' % err)
                sys.exit(1)
        else:
            print('ok')
            sys.exit(0)

        print('retrying: %s' % err)
        time.sleep(10)
        first = 0

def recoverable(err):
    return err.startswith('FATAL: ') and \
        (err.endswith('the database system is starting up') or \
        err.endswith('the database system is in recovery mode'))

if __name__ == '__main__':
    main()
