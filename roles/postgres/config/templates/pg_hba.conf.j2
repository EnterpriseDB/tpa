{# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved. #}
# Automatically generated by postgres/config from pg_hba.conf.j2.
#
# Any changes made to this file may be overwritten.

# TYPE  DATABASE        USER            ADDRESS                 METHOD
{% if postgres_user == 'postgres' %}
local   all             postgres                                peer
{% elif postgres_user == 'enterprisedb' %}
local   all             enterprisedb                            peer
{% else %}
local   all             {{ postgres_user }} peer
{% endif %}
{% if 'bdr' in role and harp_manager_user != postgres_user %}
local all {{ harp_manager_user }} {{ password_encryption }}
{% endif %}
local   replication     all                                     peer
local   all             all                                     {{ postgres_hba_local_auth_method }}


{% if 'pgbouncer' in role or 'harp-proxy' in role %}
{%    if pgbouncer_use_cert_authentication == true %}
hostssl all {{ pgbouncer_auth_user }} 127.0.0.1/32 cert
{%    else %}
hostssl all {{ pgbouncer_auth_user }} 127.0.0.1/32 md5
{%    endif %}
{% endif %}

{% if 'harp-proxy' in role and harp_dcs_user is defined %}
hostssl all {{ harp_dcs_user }} 127.0.0.1/32 {{ password_encryption }}
{% endif %}

{#
 # follow hba_force_ssl and hba_force_certificate_auth
 # for pem and outside-cluster connections
#}

{% set method=password_encryption %}
{% if hba_force_hostssl %}
{%   set type='hostssl' %}
{%   if hba_force_certificate_auth %}
{%     set method='cert' %}
{%     if hba_cert_authentication_map %}
{%       set method=method+' map='+hba_cert_authentication_map %}
{%     endif %}
{%   endif %}
{% else %}
{%   set type='host' %}
{% endif %}

{% if 'pem-server' in role %}
### pem-server: Start
# Allow connection for 'pem_user' to the pem database
hostssl pem +pem_user {{ hostvars[pem_server].ip_address }}/32 {{ password_encryption }}
# Allow the '{{ postgres_user }}' user to connect for pem monitoring
{{ type }}    all {{ postgres_user }} {{ hostvars[pem_server].ip_address }}/32 {{ method }}
# Allow connection on 'pem' database for pem_agents
{% for key in hostvars %}
{% if 'role' in hostvars[key] and ('pem-server' in hostvars[key]['role'] or 'pem-agent' in hostvars[key]['role']) %}
hostssl pem +pem_agent {{ hostvars[key].ip_address }}/32 cert
{% endif %}{% endfor %}
{% for line in pem_postgres_extra_hba_settings %}
{{line}}
{% endfor %}
### pem-server: End
{% endif %}
{% if 'beacon-agent' in role %}
hostssl all beacon 127.0.0.1/32 {{ password_encryption }}
{% endif %}
{{ type }}    all             all             127.0.0.1/32            {{ method }}
{{ type }}    all             all             ::1/128                 {{ method }}
{{ type }}    replication     all             127.0.0.1/32            {{ method }}
{{ type }}    replication     all             ::1/128                 {{ method }}
{%   for h in groups[cluster_tag] %}
{%     set role=hostvars[h].get('role', []) %}
{%     set addr=hostvars[h].ip_address %}
{%     set type='hostssl' %}
{%     if addr == hostvars[h].get('openvpn_ip', '') and not hba_force_hostssl %}
{%       set type='host' %}
{%     endif %}
{%     set addr=addr+'/32' %}
{%     set method=password_encryption %}
{%     if hba_force_certificate_auth %}
{%       set method='cert' %}
{%       if hba_cert_authentication_map %}
{%         set method=method+' map='+hba_cert_authentication_map %}
{%       endif %}
{%     endif %}
# {{ h }}
{%     if 'pgbouncer' in role or 'harp-proxy' in role %}
### cert auth with pgbouncer
{%      if pgbouncer_use_cert_authentication == true %}
hostssl all {{ pgbouncer_auth_user }} {{ addr }} cert
{%      else %}
hostssl all {{ pgbouncer_auth_user }} {{ addr }} md5
### END cert auth with pgbouncer
{%      endif %}
{%     endif %}
{%     if 'harp-proxy' in role and harp_dcs_user is defined %}
hostssl all {{ harp_dcs_user }} {{ addr }} {{ password_encryption }}
{%     endif %}
{%     if 'efm-witness' in role or ('postgres' in role and failover_manager == 'efm')  %}
host all efm {{ addr }} {{ efm_user_password_encryption }}
{%     endif %}
{%     if 'barman' in role %}
{{type}} postgres barman {{ addr }} {{ method }}
{{type}} replication streaming_barman {{ addr }} {{ method }}
{%     endif %}
{%     if 'postgres' in role %}
{{type}} all all {{ addr }} {{ method }}
{{type}} replication all {{ addr }} {{ method }}
{%     endif %}
{%     if 'haproxy' in role %}
host haproxy haproxy {{ addr }} {{ password_encryption }}
hostssl all all {{ addr }} {{ password_encryption }}
{%     endif %}
{%     if groups['role_pgd-proxy']|default([]) is not empty %}
hostssl {{ bdr_database }} {{ pgd_proxy_user }} {{ addr }} {{ password_encryption }}
{%     endif %}
{#   end of for h in groups[cluster_tag] #}
{%   endfor %}

{% for l in postgres_hba_settings %}
{{l}}
{% endfor %}
hostssl all all 0.0.0.0/0 {{ password_encryption }}
