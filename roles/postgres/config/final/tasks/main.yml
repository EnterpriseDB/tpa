---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

# We've already installed configuration files for any extensions that we
# care about; now it's time to issue CREATE EXTENSION commands.

- name: Install default Postgres extensions
  postgresql_ext:
    port: "{{ postgres_port }}"
    state: present
    db: "{{ item.0 }}"
    name: "{{ item.1 }}"
  with_nested:
    - [postgres, template1]
    - "{{ postgres_extensions|default([]) }}"
  become_user: "{{ postgres_user }}"
  become: true

# Now that extensions have been initialised, we can do the last part of
# postgres/createuser/final's work here.

- name: Grant roles to Postgres users if required
  postgresql_membership:
    port: "{{ postgres_port }}"
    groups: "{{ item.granted_roles }}"
    target_role: "{{ item.username }}"
    state: present
  with_items: "{{ postgres_users|default([]) }}"
  become_user: "{{ postgres_user }}"
  become: yes
  when:
    item.granted_roles is not empty

- include_tasks:
    file: pgbouncer.yml
    apply:
      tags: pgbouncer
  when: >
    postgres_users|json_query("[?username=='pgbouncer']") != []
    and ('bdr' not in role or inventory_hostname == first_bdr_primary)

- name: Include postgres-config-final hook
  include_tasks: "{{ hook }}"
  when:
    lookup('first_found', dict(files=hook, skip=True))
  vars:
    hook: "{{ cluster_dir }}/hooks/postgres-config-final.yml"
  tags: always
