---

# © Copyright EnterpriseDB UK Limited 2015-2023 - All rights reserved.

# There are multiple places where shared_preload_libraries may be set.
# The first time we run this code on a new cluster, only the default
# initdb-generated postgresql.conf will exist, and it may or may not
# have any shared_preload_libraries defined (EPAS does, but Postgres
# doesn't). We retrieve the default value, merge in any settings we
# want, and store the result in 8888-shared_preload_libraries.conf.
# On subsequent runs, we can retrieve the value from this file.
#
# If the user sets shared_preload_libraries in postgres_conf_settings or
# uses ALTER SYSTEM, those settings will inevitably override anything we
# do here, so we don't need to worry about them.
#
# We need to be flexible in this code: the file(s) may or may not exist,
# and there may be multiple settings (last one wins), and we must ignore
# commented-out assignments.

- name: Read current value of shared_preload_libraries
  shell: >
    eval "libs=$(cat 2>/dev/null {{ config_files|map('quote')|join(" ") }} | sed -n 's/^shared_preload_libraries *= *//p'|tail -1)" && echo $libs
  args:
    executable: /bin/bash
  changed_when: false
  register: libs
  vars:
    config_files:
    - "{{ postgres_data_dir }}/postgresql.conf"
    - "{{ _include_dir }}/8888-shared_preload_libraries.conf"
  check_mode: no

- name: Update shared_preload_libraries list
  set_fact:
    _preload_list:
      "{{ _old_list|union(shared_preload_libraries|default([])|flatten) }}"
  vars:
    _old_list: >
      {{ libs.stdout and libs.stdout.split(',')|map('trim')|list or [] }}

# We can fix certain ordering problems in shared_preload_libraries,
# but we don't expect to encounter these problems in production (we
# would not generate the incorrect order to begin with).
#
# Right now, the only such problem is to ensure that bdr must come after
# both postgres_fdw and pglogical—otherwise we remove both pglogical and
# bdr and add them back at the end of the list.

- name: Adjust ordering of shared_preload_libraries if required
  set_fact:
    _preload_list:
      "{{ _preload_list|reject('in', p_and_b)|list|union(p_and_b) }}"
  when: >
    ('bdr' in _preload_list and 'pglogical' in _preload_list and
    _preload_list.index('bdr')|int < _preload_list.index('pglogical')|int) or
    ('bdr' in _preload_list and 'postgres_fdw' in _preload_list and
    _preload_list.index('bdr')|int < _preload_list.index('postgres_fdw')|int)
  vars:
    p_and_b: ['pglogical', 'bdr']

- name: Adjust ordering to avoid conflict with pgaudit
  set_fact:
    _preload_list: "{{ _preload_list|reject('==', 'pgaudit')|list|union(['pgaudit']) }}"
  when: >
    'bdr' in role
    and bdr_version is version('4', '>=')
    and 'bdr' in _preload_list
    and 'pgaudit' in _preload_list
    and _preload_list.index('bdr')|int > _preload_list.index('pgaudit')|int

- name: Remove pglogical if BDR v4 is in use
  set_fact:
    _preload_list:
      "{{ _preload_list|reject('equalto', 'pglogical')|list }}"
  when: >
    'bdr' in role
    and bdr_version is version('4', '>=')

# When it comes to writing out the file again, we don't make any attempt
# to retain whatever was in it before; as the warning clearly says, this
# file—like any other in _include_dir—is subject to being overwritten.

- name: Write new value for shared_preload_libraries
  template:
    src: variable.j2
    dest: "{{ spl_config }}"
    owner: "{{ postgres_user }}"
    group: "{{ postgres_group }}"
    mode: "0644"
  vars:
    spl_config: "{{ _include_dir }}/8888-shared_preload_libraries.conf"
    variable: shared_preload_libraries
    value: >
      '{{ _preload_list|join(', ') }}'
  when: _postgres_config_split
  notify:
    - Note Postgres restart required
