---

# Â© Copyright EnterpriseDB UK Limited 2015-2021 - All rights reserved.

# Here we install any configuration required for the extensions to be
# installed. The "CREATE EXTENSION" commands will be issued later, via
# postgres/config/final. The list of postgres_extensions was determined
# earlier in roles/facts.

# We install a default configuration for the extensions we care about.
# We don't need to have conditional logic in this template, because the
# configuration will be ignored if we aren't installing a particular
# extension after all.

- name: Install default extension configuration file
  template:
    src: extensions.conf.j2
    dest: "{{ _include_dir }}/1111-extensions.conf"
    owner: "{{ postgres_user }}"
    group: "{{ postgres_group }}"
    mode: 0644
  notify:
    - Note Postgres restart required

# Some extensions need entries in shared_preload_libraries.

- name: Add shared_preload_libraries entries for postgres_extensions
  set_fact:
    shared_preload_libraries: "{{
      shared_preload_libraries|default([])|union([item])
    }}"
  with_items: "{{ _preload_extensions }}"
  when: item in postgres_extensions

- name: Add repmgr to shared_preload_libraries if required
  set_fact:
    shared_preload_libraries: "{{
      shared_preload_libraries|union(['repmgr'])
    }}"
  when: >
    failover_manager == 'repmgr'
    and groups|members_of('role_replica') is not empty

- name: Add entries to shared_preload_libraries
  include_tasks: preload-library.yml
