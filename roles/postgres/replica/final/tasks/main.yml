---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# This role is applied to every postgres replica instance that isn't
# handled by repmgr. It uses pg_basebackup to set up a new replica.

- assert:
    that:
      postgres_version is version('12', '>=')
    fail_msg: >-
      TPA requires repmgr to create physical replicas for Postgres v11
      and below.

# First, we must initialise our PGDATA by cloning an upstream instance.

- include_tasks: clone.yml

# Next, we start Postgres on the replicas and collect cluster_facts
# (after recovery of the WAL from `pg_basebackup -X stream`).

- name: Ensure that Postgres is running
  service:
    name: "{{ postgres_service_name }}"
    state: started

- name: Wait for Postgres to start
  include_role:
    name: postgres/restart
    tasks_from: check-postgres-available.yml

- include_role: name=postgres/facts
  when:
    cluster_facts is empty
    and task_selector|selects('postgres', 'replica')

# Postgres is now running on both primary and replicas, but the replicas
# can't start streaming until we create the necessary replication slots.

- include_tasks: start-replication.yml
