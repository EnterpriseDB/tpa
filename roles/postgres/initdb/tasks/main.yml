---

- name: Ensure postgres directories exist and have the right permissions
  file:
    path: "{{ item }}"
    owner: postgres
    group: postgres
    mode: 0700
    state: directory
  with_items:
    - "{{ postgres_home }}"
    - "{{ postgres_data_dir }}"
  tags: [postgres, initdb]

# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/SELinux_Users_and_Administrators_Guide/sect-Managing_Confined_Services-PostgreSQL-Configuration_Examples.html

- name: Set correct SELinux context for {{ postgres_data_dir }}
  shell: >
    if $(type -p selinuxenabled &>/dev/null); then
    semanage fcontext -a -t postgresql_db_t "{{ postgres_data_dir }}(/.*)?" &&
    restorecon -R -v "{{ postgres_data_dir }}";
    fi
  args:
    executable: /bin/bash
  when:
    postgres_data_dir != default_postgres_data_dirs[ansible_os_family]

- name: Check if PGDATA has been initialised
  stat:
    path: "{{ postgres_data_dir }}/PG_VERSION"
  register: pgdata
  tags: [postgres, initdb]

- name: Set pgdata_initialised
  set_fact:
    pgdata_initialised: "{{ pgdata.stat.exists }}"
  tags: [postgres, initdb]

- name: Initialise PGDATA={{ postgres_data_dir }}
  block:
    - name: Run initdb to initialise data directory
      command: >
        {{ postgres_bin_dir }}/initdb -D {{ postgres_data_dir }} \
          {% for x in postgres_initdb_opts %}{{x|quote}} {% endfor %}
      environment:
        TZ: UTC
      become_user: "{{ postgres_user }}"
      become: yes
    - set_fact: pgdata_initialised=True
  when:
    not pgdata_initialised and 'replica' not in role
  tags: [postgres, initdb]
