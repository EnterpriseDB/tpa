---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- include_role: name=postgres/src/req
  tags: always

- name: Check if ssh agent forwarding is enabled
  shell: echo $SSH_AUTH_SOCK
  args:
    executable: /bin/bash
  register: cmd
  become: no

- name: Fetch Postgres source from git repository
  git:
    repo: "{{ postgres_git_url }}"
    dest: "{{ postgres_src_dir }}"
    version: "{{ postgres_git_ref }}"
    reference: "{{ postgres_git_reference_repo }}"
    accept_hostkey: yes
  environment: "{{ ssh_auth_sock|ternary(ssh_env, {}) }}"
  vars:
    ssh_auth_sock: "{{ cmd.stdout.strip() }}"
    ssh_env:
      SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"

- name: Remove old build directory
  file: state=absent path="{{ postgres_build_dir }}" force=yes
  tags: [build-clean, postgres-clean]

- name: Ensure build directory exists
  file: state=directory path="{{ postgres_build_dir }}"

- name: Configure Postgres
  shell: >
    {{ postgres_src_dir }}/configure \
        --prefix={{ postgres_install_dir|expanduser|quote }} \
        {% for arg in postgres_configure_opts %}{{ arg|quote }} {% endfor %}
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  environment: "{{ postgres_configure_env }}"
  tags: [build-clean, postgres-clean]

- name: Build Postgres
  shell: "{{ postgres_make_command }} {{ item }}"
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  with_items: "{{ postgres_build_targets }}"

- name: Install Postgres
  shell: "{{ postgres_make_command }} {{ item }}"
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  with_items: "{{ postgres_install_targets }}"

- name: Override postgres_bin_dir
  set_fact:
    postgres_bin_dir: "{{ postgres_install_dir }}/bin"
  when:
    postgres_installation_method == 'src'
  tags: always

- name: Install psycopg2
  package:
    name: python-psycopg2
    state: latest
