---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- include_role: name=postgres/src/req

- name: Check if ssh agent forwarding is enabled
  shell: echo $SSH_AUTH_SOCK
  args:
    executable: /bin/bash
  register: cmd
  become: no
  changed_when: False

- name: Fetch Postgres source from git repository
  git:
    repo: "{{ postgres_git_url }}"
    dest: "{{ postgres_src_dir }}"
    version: "{{ postgres_git_ref|default(default_postgres_git_ref) }}"
    reference: "{{ postgres_git_reference_repo }}"
    depth: 1
    accept_hostkey: yes
  vars:
    ansible_connection: ssh
    ansible_ssh_host: "{{ (platform == 'docker')|ternary(ip_address, ansible_host) }}"
    ssh_auth_sock: "{{ cmd.stdout.strip() }}"
    ssh_env:
      SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
    git_credentials: "{{ lookup('env', 'TPA_GIT_CREDENTIALS') }}"
    git_env:
      GIT_USERNAME: "{{ git_credentials.split(':')[0] }}"
      GIT_PASSWORD: "{{ git_credentials.split(':')[1] }}"
    _task_environment: "{{
      git_credentials|ternary(git_env, {})
      |combine(ssh_auth_sock|ternary(ssh_env, {}))
    }}"
  when:
    postgres_src_dir not in mounted_sources
  environment: "{{ target_environment|combine(_task_environment) }}"

- include_role: name=src/install tasks_from=verify-branch.yml
  vars:
    source_directory: "{{ postgres_src_dir }}"
    git_repository_ref: "{{ postgres_dir_ref }}"
  when:
    postgres_src_dir in mounted_sources
    and postgres_git_ref is defined

- name: Remove old build directory
  file: state=absent path="{{ postgres_build_dir }}" force=yes
  tags: [build-clean, postgres-clean]

- name: Ensure build directory exists
  file: state=directory path="{{ postgres_build_dir }}"

- name: Configure Postgres
  shell: >
    {{ postgres_src_dir }}/configure \
        --prefix={{ postgres_install_dir|expanduser|quote }} \
        {% for arg in all_configure_opts %}{{ arg|quote }} {% endfor %}
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  vars:
    all_configure_opts: "{{
      postgres_configure_opts|union(postgres_extra_configure_opts)
    }}"
    _task_environment: "{{ postgres_configure_env|combine(postgres_extra_configure_env) }}"
  environment: "{{ target_environment|combine(_task_environment) }}"
  tags: [build-clean, postgres-clean]

- name: Build Postgres
  shell: "{{ postgres_make_command }} {{ item }}"
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  with_items: "{{ postgres_build_targets }}"

- name: Install Postgres
  shell: "{{ postgres_make_command }} {{ item }}"
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  with_items: "{{ postgres_install_targets }}"
  notify:
    - Note Postgres restart required

- include_role:
    name: postgres/pkg
    tasks_from: src.yml
    apply:
      tags: pkg
  tags: pkg
