---

# Â© Copyright EnterpriseDB UK Limited 2015-2023 - All rights reserved.

- include_role: name=src/install tasks_from=clone.yml
  vars:
    name: Postgres
    repo: "{{ postgres_git_url }}"
    dest: "{{ postgres_src_dir }}"
    version: "{{ postgres_git_ref|default(default_postgres_git_ref) }}"
    reference: "{{ postgres_git_reference_repo }}"

- include_role: name=src/install tasks_from=verify-branch.yml
  vars:
    source_directory: "{{ postgres_src_dir }}"
    git_repository_ref: "{{ postgres_git_ref }}"
  when:
    postgres_git_ref is defined

- name: Remove old build directory
  file:
    path: "{{ postgres_build_dir }}"
    state: absent
    force: yes
  tags: [build-clean, postgres-clean]

- name: Ensure build directory exists
  file:
    path: "{{ postgres_build_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Configure Postgres
  shell: >
    PATH={{ build_path }} \
    "{{ postgres_src_dir }}"/configure \
        --prefix={{ postgres_install_dir|expanduser|quote }} \
        {% for arg in all_configure_opts %}{{ arg|quote }} {% endfor %}
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  vars:
    all_configure_opts:
      "{{ postgres_configure_opts|union(postgres_extra_configure_opts) }}"
    _task_environment: "{{ postgres_configure_env|combine(postgres_extra_configure_env) }}"
  environment: "{{ target_environment|combine(_task_environment) }}"
  tags: [build-clean, postgres-clean]

- name: Build Postgres
  shell: "PATH={{ build_path }} {{ postgres_make_command }} {{ item }}"
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  with_items: "{{ postgres_build_targets }}"

- name: Install Postgres
  shell: "PATH={{ build_path }} {{ postgres_make_command }} {{ item }}"
  args:
    chdir: "{{ postgres_build_dir }}"
    executable: /bin/bash
  with_items: "{{ postgres_install_targets }}"
  notify:
    - Note Postgres restart required

- name: Collect facts on SELinux status
  setup:
    gather_subset:
      - "!all"
      - "!min"
      - selinux

- name: Restore SELinux file context for Postgres install directory
  shell: >
    restorecon -R -v {{ postgres_install_dir }}
  when:
    platform not in ['docker']
    and ansible_selinux.status == 'enabled'

- name: Install postgres rebuild script
  template:
    src: rebuild-sources.sh.j2
    dest: "/etc/tpa/rebuild-scripts/rebuild-postgres.sh"
    owner: root
    group: root
    mode: "0755"

- include_role:
    name: postgres/pkg
    tasks_from: src.yml
    apply:
      tags: pkg
  tags: pkg
