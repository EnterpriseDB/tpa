---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

- name: Retrieve sequences currently in replication set {{ set.name }}
  postgresql_query:
    conninfo: "{{ dsn|dbname(pub.database) }}"
    queries:
    - text: SET search_path TO ''
    - text: >
        SELECT set_seqoid FROM pglogical.replication_set_seq rss
          JOIN pglogical.replication_set rs USING (set_id)
          WHERE rs.set_name = %s
      args:
      - "{{ set.name }}"
  register: sequence_tuples
  become_user: "{{ postgres_user }}"
  become: yes
  changed_when: false

# Any sequence mentioned in set.sequences that is not in sequence_tuples
# needs to be added to the replication set.

- name: Add sequences to replication set {{ set.name }}
  postgresql_query:
    conninfo: "{{ dsn|dbname(pub.database) }}"
    queries:
    - text: >
        SELECT pglogical.replication_set_add_sequence(
          set_name := %s, relation := %s, synchronize_data := %s
        )
      args:
      - "{{ set.name }}"
      - "{{ seq.name }}"
      - "{{ seq.synchronize_data|default(false) }}"
  become_user: "{{ postgres_user }}"
  become: yes
  vars:
    seq_name: "{{
        'public.%s' % seq.name
          if '.' not in seq.name else seq.name
      }}"
    existing_sequences: "{{
        sequence_tuples.results[1]|json_query('[*].set_seqoid')
      }}"
  with_items: "{{ set.sequences }}"
  loop_control:
    loop_var: seq
    label: >-
      {{ seq.name }}
  when:
    seq_name not in existing_sequences
  changed_when: true

# Anything that's in sequence_tuples but not in set.sequences needs to
# be removed from the replication set.

- name: Remove unwanted sequences from replication set {{ set.name }}
  postgresql_query:
    conninfo: "{{ dsn|dbname(pub.database) }}"
    queries:
    - text: >
        SELECT pglogical.replication_set_remove_sequence(
          set_name := %s, relation := %s
        )
      args:
      - "{{ set.name }}"
      - "{{ seq.set_seqoid }}"
  become_user: "{{ postgres_user }}"
  become: yes
  with_items: "{{ sequence_tuples.results[1] }}"
  loop_control:
    loop_var: seq
    label: >-
      {{ seq.set_seqoid }}
  vars:
    set_sequences: >
      {{ set.sequences|json_query('[*].name') }}
  when:
    seq.set_seqoid not in set_sequences
    and seq.set_seqoid|regex_replace('^public\.', '') not in set_sequences
  changed_when: true
