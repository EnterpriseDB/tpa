Extracted from https://github.com/boto/boto/pull/3699 to fix a problem
with using Boto through an https_proxy

diff --git a/boto/connection.py b/boto/connection.py
index a0d89a51..1206c1b2 100644
--- a/boto/connection.py
+++ b/boto/connection.py
@@ -796,18 +796,21 @@ class AWSAuthConnection(object):
         else:
             sock = socket.create_connection((self.proxy, int(self.proxy_port)))
         boto.log.debug("Proxy connection: CONNECT %s HTTP/1.0\r\n", host)
-        sock.sendall("CONNECT %s HTTP/1.0\r\n" % host)
-        sock.sendall("User-Agent: %s\r\n" % UserAgent)
+        sock.sendall(("CONNECT %s HTTP/1.0\r\n" % host).encode())
+        sock.sendall(("User-Agent: %s\r\n" % UserAgent).encode())
         if self.proxy_user and self.proxy_pass:
             for k, v in self.get_proxy_auth_header().items():
-                sock.sendall("%s: %s\r\n" % (k, v))
+                sock.sendall(("%s: %s\r\n" % (k, v)).encode())
             # See discussion about this config option at
             # https://groups.google.com/forum/?fromgroups#!topic/boto-dev/teenFvOq2Cc
             if config.getbool('Boto', 'send_crlf_after_proxy_auth_headers', False):
-                sock.sendall("\r\n")
+                sock.sendall(b"\r\n")
         else:
-            sock.sendall("\r\n")
-        resp = http_client.HTTPResponse(sock, strict=True, debuglevel=self.debug)
+            sock.sendall(b"\r\n")
+        kwargs = {}
+        if six.PY2:
+            kwargs['strict'] = True
+        resp = http_client.HTTPResponse(sock, debuglevel=self.debug, **kwargs)
         resp.begin()

         if resp.status != 200:
