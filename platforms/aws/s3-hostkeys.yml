---

# Â© Copyright EnterpriseDB UK Limited 2015-2021 - All rights reserved.

# We upload hostkeys/ssh_host_xxx_key{,.pub} to cluster_bucket in S3.
#
# We cache a semi-arbitrary "expiry time" (less than the S3 expiration
# time of one hour) after which provision.yml will reinvoke us. This is
# easier and cheaper than trying to decide if (a) any of the objects in
# S3 have expired, and/or (b) any of the keys has changed on disk (which
# they shouldn't do often anyway).

- name: Upload SSH host key files
  aws_s3:
    bucket: "{{ cluster_bucket }}"
    object: "{{ cluster_name }}/hostkeys/{{ item.0 }}{{ item.1 }}.txt"
    src: "{{ cluster_dir }}/hostkeys/ssh_host_{{ item.0 }}_key{{ item.1 }}"
    overwrite: different
    expiration: 3600
    mode: put
  with_nested:
    - ["rsa", "ecdsa"]
    - ["", ".pub"]
  loop_control:
    label: >-
      ssh_host_{{ item.0 }}_key{{ item.1 }}
  register: keyurls

- include_tasks: ../common/set-provisioning-var.yml
  vars:
    name: s3_hostkey_expiry
    value: "{{ lookup('pipe', 'date +%s')|int + 2700 }}"
