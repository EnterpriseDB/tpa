---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- assert:
    msg: "Ansible 2.6.x is required"
    that:
      - ansible_version.major == 2
      - ansible_version.minor == 6
  tags: prereqs

- import_tasks: validate-compat.yml

- name: Set default empty cluster_vars
  set_fact:
    cluster_vars: "{{ cluster_vars|default({}) }}"

- name: Ensure cluster_name is specified
  assert:
    msg: "Please define cluster_name in {{config_file}}"
    that:
      - cluster_name is defined
      - cluster_name != ''

- name: Ensure given cluster_name is valid
  assert:
    msg: "Invalid cluster_name='{{ cluster_name }}' defined in {{ config_file }} (may contain only letters, numbers, underscores, minus)"
    that:
      - cluster_name|match('^[_a-zA-Z0-9-]+$')

- name: Set default cluster_tags (including Owner)
  set_fact:
    cluster_tags: "{{ default_tags|combine(cluster_tags|default({})) }}"
  vars:
    default_tags:
      Owner: >-
        {{ Owner|default(lookup('env', 'USER')) or lookup('pipe', 'id -u -n || true') }}

- name: Ensure cluster_tags[Owner] is sensible
  assert:
    msg: "Please set cluster_tags[Owner] or use '--owner Name' to identify the person responsible for this cluster"
    that:
      - cluster_tags['Owner'] is defined
      - cluster_tags['Owner'] not in [
          '', 'root', 'postgres', 'ec2-user', 'admin', 'ubuntu',
          'vagrant', 'tpa',
        ]
  when:
    platform in ['aws']

# It is not currently meaningful to set cluster_tags['Name'] to anything
# other than cluster_name. We only use the latter value, so it will only
# lead to confusion to allow the former to be set.

- name: Ensure that the cluster_name is set as a tag
  set_fact:
    cluster_tags: "{{ cluster_tags|combine(dict(Name=cluster_name)) }}"
    cluster_tag: "{{ cluster_tag|default('tag_Cluster_' + cluster_name) }}"

- name: Ensure instances is correctly configured
  assert:
    msg: "Please define instances (an array of hashes, one per instance) in {{config_file}}"
    that:
      - instances is defined
      - instances is sequence and instances is not string and instances is not mapping
      - instances | length > 0

- name: Set defaults for instance definitions
  set_fact:
    instances: "{{
      instances|set_instance_defaults(cluster_name,
        compat_defaults|combine(instance_defaults|default({}), recursive=True)
      )
    }}"

- name: Ensure that every instance specifies a node id and name
  assert:
    msg: "Please set 'node' and 'Name' on every instance"
    that:
      - instances|selectattr('node','defined')|list|count == instances|count
      - instances|selectattr('Name','defined')|list|count == instances|count

- name: Validate hostnames (lowercase, no underscores)
  assert:
    msg: "Please ensure 'Name' contains only [a-z0-9-]"
    that:
      - item.Name|match('^[a-z0-9-]+$')
  with_items: "{{ instances }}"
