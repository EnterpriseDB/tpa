- name: Ensure cluster_name is correctly configured
  assert:
    msg: "Please define cluster_name (letters, numbers, underscores) in {{config_file}}"
    that:
      - cluster_name is defined
      - cluster_name != ''
      - cluster_name|match('^[_a-zA-Z0-9]+$')

- name: Ensure cluster_tags is correctly configured
  assert:
    msg: "Please define cluster_tags (a hash, including Owner) in {{config_file}}"
    that:
      - cluster_tags is defined
      - cluster_tags is mapping
      - cluster_tags['Owner'] is defined
      - cluster_tags['Owner'] != ''

- name: Set default empty cluster_vars
  set_fact:
    cluster_vars: "{{ cluster_vars|default({}) }}"

# It is not currently meaningful to set cluster_tags['Name'] to anything
# other than cluster_name. We only use the latter value, so it will only
# lead to confusion to allow the former to be set.

- name: Ensure that the cluster_name is set as a tag
  set_fact:
    cluster_tags: "{{ cluster_tags|combine(dict(Name=cluster_name)) }}"

- name: Ensure instances is correctly configured
  assert:
    msg: "Please define instances (an array of hashes, one per instance) in {{config_file}}"
    that:
      - instances is defined
      - instances is sequence and instances is not string and instances is not mapping
      - instances | length > 0

- name: Preprocess instance definitions
  set_fact:
    instances: "{{ instances|expand_instance_tags(cluster_name) }}"

- name: Ensure that every instance specifies a node id and name
  assert:
    msg: "Please set 'node' and 'Name' on every instance"
    that:
      - instances|selectattr('node','defined')|list|count == instances|count
      - instances|selectattr('Name','defined')|list|count == instances|count

- name: Validate hostnames (lowercase, no underscores)
  assert:
    msg: "Please ensure 'Name' contains only [a-z0-9-]"
    that:
      - item.Name|match('^[a-z0-9-]+$')
  with_items: "{{ instances }}"

