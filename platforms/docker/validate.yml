---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

- name: Retrieve docker system info
  docker_host_info:
  register: docker_system

# Some platforms e.g. ppcle in our tests include a leading 'v' character
# and also a '+' sign in the docker version string. Remove it before
# running the version check so the version test doesn't fail because of
# the invalid version string.

- name: Check required docker version
  assert:
    that:
      - _docker_version is version('20.10', '>=')
    msg:
      - "TPA requires Docker CE version 20.10 or later (you are running {{ _docker_version }})"
      - "Consult platform-docker.md for information on using docker platform"
  vars:
    _docker_version: '{{ docker_system.host_info.ServerVersion | regex_replace("[a-z\+]+", "") }}'

- name: Ensure that every instance has a defined image
  assert:
    msg: "Please set 'image' on every instance"
    that:
      - docker_instances|selectattr('image','defined')|list|count == docker_instances|count

# if we are running on a cgroups 1 system, we can use any image; if we
# we are running on a cgroups 2 system, we must check that we are not
# trying to use an incompatible older image

- name: Check required docker environment
  assert:
    that: >
       _host_cgroup_version == '1'
       or _bad_images|length == 0
    msg:
      - "TPA doesn't support CgroupVersion 2 for the following images: {{ _bad_images|unique }}"
      - "Consult platform-docker.md for information on using docker platform"
  vars:
    _host_cgroup_version: "{{ docker_system.host_info.CgroupVersion|default(None) }}"
    _cgroups1_only_images: [ "tpa/redhat:7" ]
    _bad_images: "{{ docker_instances|map(attribute='image')|select('in', _cgroups1_only_images) }}"

- name: Ensure that docker_images, if defined, is a hash
  assert:
    msg: "Expected docker_images to map image names to build instructions"
    that:
      - docker_images is not defined or
        docker_images is mapping

- name: Allow single-word or FQDN hostnames for docker containers
  set_fact:
    hostname_patterns: "{{
        hostname_patterns|default({})|combine({
          'docker': '^[a-z0-9][a-z0-9-]*[a-z0-9](\\.[a-z0-9][a-z0-9-]*[a-z0-9])*$'
        })
      }}"

- name: Set valid instance keys
  set_fact:
    valid_instance_keys: "{{
        valid_instance_keys|default({})|combine({
          'docker': instance_keys
        })
      }}"
  vars:
    instance_keys:
    - image
    - privileged
    - restart_policy
    - memory
    - memory_reservation
    - shm_size
    - env_file
    - env
    - log_driver
    - log_options
    - exposed_ports
    - published_ports
    - devices
    - networks
    - sysctls
    - ulimits
    - local_source_directories
    - docker_security_opts
    - docker_cap_add
    - docker_cap_drop
    - region
    - ip_address
