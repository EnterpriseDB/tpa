---

# Create an encrypted volume named luks_volume on luks_device, create a
# filesystem on it, and mount it under luks_mountpoint.
#
# XXX The passphrase should be generated and stored as an encrypted host
# variable.

- name: Ensure LUKS configuration is available
  assert:
    that:
      - luks_volume is defined
      - luks_device is defined
      - luks_mountpoint is defined
      - ansible_version.major >= 2

- name: Is the encrypted volume already initialised?
  command: cryptsetup isLuks "{{ luks_device }}"
  ignore_errors: true
  changed_when: False
  register: luks

- block:
    - name: Load passphrase from vault
      include_vars: passphrase.yml

    - name: Write passphrase to temporary file {{ tmpfile }}
      copy: content="{{ luks_passphrase }}" dest="{{ tmpfile }}" mode=0600

    - name: Initialise LUKS volume on {{ luks_device }}
      command: cryptsetup -q luksFormat "{{ luks_device }}" "{{ tmpfile }}"

    - name: Map LUKS volume to /dev/mapper/{{ luks_volume }}
      command: cryptsetup luksOpen "{{ luks_device }}" "{{ luks_volume }}" --key-file "{{ tmpfile }}"

    - name: Remove temporary key file {{ tmpfile }}
      file: path="{{ tmpfile }}" state=absent

    - name: Create ext4 filesystem on mapped LUKS volume {{ luks_volume }}
      command: mkfs.ext4 "/dev/mapper/{{ luks_volume }}"

    - name: Ensure mount point {{ luks_mountpoint }} exists
      file: path="{{ luks_mountpoint }}" state=directory

    - name: Mount mapped encrypted filesystem under {{ luks_mountpoint }}
      command: mount "/dev/mapper/{{ luks_volume }}" "{{ luks_mountpoint }}"

  when: luks|failed
