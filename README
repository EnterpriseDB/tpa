Introduction
------------

This repository contains automation tools to provision, configure, and
operate PostgreSQL servers.

To provision servers on AWS EC2, create clusters/name/config.yml with
the instance configuration (see clusters/test for an example) and run:

    utils/ansible-playbook platforms/aws/provision.yml \
        -e cluster=./clusters/name

Next, to deploy Postgres on the EC2 instances provisioned above, create
clusters/name/deploy.yml that applies the desired roles to the instances
based on their tags (again, see clusters/test for an example), and run:

    utils/ansible-playbook -i inventory/ec2.py clusters/name/deploy.yml \
        -e cluster=./clusters/name

To permanently deprovision a cluster, run:

    utils/ansible-playbook platforms/aws/deprovision.yml \
        -e cluster=./clusters/name

Requirements
------------

Python 2.7.x

Recent versions of PyCrypto, jinja2, and boto. Install using pip rather
than packages. (Other Python libraries may also be needed.)

Ansible 2.x
    https://github.com/2ndQuadrant/ansible
    http://docs.ansible.com/ansible/intro_installation.html

Use 2ndQuadrant/ansible in preference to ansible/ansible; the former is
tested and includes local changes not present upstream. Install Ansible
by cloning the git repository, export ANSIBLE_HOME=/path/to/clone, and
invoke ansible* through the utils/ansible* wrappers provided here.

The AWS CLI is useful and recommended, though not exactly required.
    https://aws.amazon.com/cli/
    http://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/ec2-cli-get-set-up.html

--
Abhijit Menon-Sen <ams@2ndQuadrant.com>
