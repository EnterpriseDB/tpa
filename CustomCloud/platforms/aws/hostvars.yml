---

- name: Translate platform-specific variables names
  action: set_fact
  args:
    "{{ item.var }}": "{{ vars[item.source]|default(item.default)|default(None) }}"
  when: item.var not in vars
  with_items:
    - var: db
      source: ec2_tag_db
    - var: node
      source: ec2_tag_node
    - var: name
      source: ec2_tag_Name
    - var: role
      source: ec2_tag_role
    - var: backup
      source: ec2_tag_backup
    - var: upstream
      source: ec2_tag_upstream
    - var: public_ip
      source: ec2_ip_address
    - var: private_ip
      source: ec2_private_ip_address

# By default, we use each node's private IP address for inter-node
# communication. We also make note of which address variables are set.

- set_fact:
    ip_address: "{{ private_ip }}"
    ip_addresses: ['public_ip', 'private_ip']

# Just in case the instance has «db: primary» or «db: standby» set,
# we'll add that to the list of roles. Note standby→replica.

- set_fact:
    role: "{{ role|union(['primary']) }}"
  when: db == 'primary' and 'primary' not in role

- set_fact:
    role: "{{ role|union(['replica']) }}"
  when: db == 'standby' and 'replica' not in role

# Add 'postgres' to role when either 'primary' or 'replica' is given,
# just as a convenience.

- set_fact:
    role: "{{ role|union(['postgres']) }}"
  when: >
    'primary' in role or 'replica' in role
