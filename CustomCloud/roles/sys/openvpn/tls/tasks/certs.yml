---

- name: Generate the host certificate
  local_action:
    module: >
      shell
      umask 077 &&
      /usr/bin/openssl genrsa -out "{{ cluster_name }}-{{ inventory_hostname }}.key" 4096
  args:
    chdir: "{{ playbook_dir }}/certs"
    creates: "{{ cluster_name }}-{{ inventory_hostname }}.key"
  run_once: yes
  sudo: no

- name: Generate the certificate signing request
  local_action:
    module: >
      shell
      umask 077 &&
      /bin/echo -e "--\nState\nCity\nOrganization\nOrganizationalUnit\nlocalhost.localdomain\nroot@localhost.localdomain\n" |
      /usr/bin/openssl req -new -key "{{ cluster_name }}-{{ inventory_hostname }}.key" -out "{{ cluster_name }}-{{ inventory_hostname }}.csr"
  args:
    chdir: "{{ playbook_dir }}/certs"
    creates: "{{ cluster_name }}-{{ inventory_hostname }}.csr"
  run_once: yes
  sudo: no

- name: Sign the csr with our CA certificate
  local_action:
    module: >
      shell
      umask 077 &&
      /bin/echo -e "--\nState\nCity\nOrganization\nOrganizationalUnit\nlocalhost.localdomain\nroot@localhost.localdomain\n" |
      /usr/bin/openssl x509 -req -in "{{ cluster_name }}-{{ inventory_hostname }}.csr" -CA "{{ cluster_name }}-root-CA.pem" -CAkey "{{ cluster_name }}-root-CA.key" -CAcreateserial -out "{{ cluster_name }}-{{ inventory_hostname }}.crt" -days 3650 -sha256
  args:
    chdir: "{{ playbook_dir }}/certs"
    creates: "{{ cluster_name }}-{{ inventory_hostname }}.crt"
  run_once: yes
  sudo: no

- name: Copy the crt file to host
  copy: src="{{ playbook_dir }}/certs/{{ cluster_name }}-{{ inventory_hostname }}.crt"  dest="/etc/tpa/openvpn/{{ cluster_name }}-{{ inventory_hostname }}.crt"

- name: Copy the key file to key
  copy: src="{{ playbook_dir }}/certs/{{ cluster_name }}-{{ inventory_hostname }}.key"  dest="/etc/tpa/openvpn/{{ cluster_name }}-{{ inventory_hostname }}.key"
