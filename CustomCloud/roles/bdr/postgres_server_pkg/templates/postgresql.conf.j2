data_directory = '{{ pgdata }}'
hba_file = '{{ pgconf }}/pg_hba.conf'
ident_file = '{{ pgconf }}/pg_ident.conf'
external_pid_file = '{{ pgsock }}/{{ pgversion }}-main.pid'
unix_socket_directories = '{{ pgsock }}'

listen_addresses = '*'

ssl = true
ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'

#
# Prerequisite PostgreSQL parameters
#

wal_level = 'logical'
shared_preload_libraries= 'bdr'
max_connections = 200
max_worker_processes = 100
max_replication_slots = 100
max_wal_senders = 100
track_commit_timestamp = on
logging_collector = on
log_statement = all
log_min_messages = 'debug2'
log_line_prefix = '%t %p:%l %v:%t %a: '

# If you want to default to BDR global sequences:
default_sequenceam = 'bdr'

#
# BDR specific configuration variables
#

bdr.conflict_logging_include_tuples = on
bdr.log_conflicts_to_table = on
bdr.synchronous_commit = off

# bdr.temp_dump_directory = '/temp/file/path'
# This setting is only used during initial bringup via logical copy.
#  It is not used by bdr_init_copy. 

bdr.max_ddl_lock_delay = -1
# -1 (the default) uses the value of max_standby_streaming_delay.
bdr.ddl_lock_timeout = -1
# The default value -1 (the default) uses the value of lock_timeout.
bdr.permit_ddl_locking = off
# off means that unintended DDL that can be disruptive to production is prevented.
bdr.trace_ddl_locks_level = debug
# In increasing order of verbosity, settings are none, statement, acquire_release, peers and debug.


# Less common or internal configuration variables
# The parameters listed below need to be discussed with Craig
# They might be unnecessary for initial implementation

# bdr.default_apply_delay (integer)
# bdr.skip_ddl_locking (boolean)
# bdr.permit_unsafe_ddl_commands (boolean)
# bdr.skip_ddl_replication (boolean)
# bdr.do_not_replicate (boolean)
# bdr.trace_replay (boolean)
# bdr.extra_apply_connection_options (boolean)
