---

## Ensure needed directories exist

- name: Ensure that /pgxl/data exists
  file:
    path: /pgxl/data
    state: directory
    owner: postgres
    group: postgres
    mode: 0755

- name: Ensure that /pgxl/wal exists
  file:
    path: /pgxl/wal
    state: directory
    owner: postgres
    group: postgres
    mode: 0755


## Initialize the cluster

- name: Appoint control node
  set_fact: control_hostname="{{ item }}"
  when: "hostvars[item].node == '1'"
  with_items: "{{ play_hosts }}"

- name: Check if pgxc_ctl.conf exists
  stat: path=~postgres/pgxc_ctl.conf
  register: conf
  when: inventory_hostname == control_hostname

- block:
    - name: Install pgxc_ctl.conf on control node
      template:
        src: pgxc_ctl.conf.j2
        dest: ~postgres/pgxc_ctl.conf
    - name: Run pgxc_ctl init all
      shell: pgxc_ctl -c ~postgres/pgxc_ctl.conf init all
      args:
        executable: /bin/bash
      environment:
        LC_ALL: en_US.UTF-8
        PATH: /opt/pgxl/bin:/usr/local/bin:/usr/bin:/bin
  when: inventory_hostname == control_hostname and not conf.stat.exists
  sudo_user: postgres
  sudo: true


## Quick test to make sure that the cluster is operational

- block:
    - name: Test XL - createdb
      shell: source ~/.profile && createdb test
      args:
        executable: /bin/bash
    - name: Test XL - create replicated table
      shell: source ~/.profile && psql test -c "create table tab distribute by replication as select id from generate_series(1, 128) id;"
      args:
        executable: /bin/bash
    - name: Test XL - dropdb
      shell: source ~/.profile && dropdb test
      args:
        executable: /bin/bash
  become: true
  become_user: postgres
  when: inventory_hostname == control_hostname
