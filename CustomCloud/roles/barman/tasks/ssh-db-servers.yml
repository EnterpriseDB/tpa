---

- name: Add barman server to known_hosts on primary db server "{{current_host}}"
  shell: ssh-keyscan -H "{{ barman_hostname }}" >> ~postgres/.ssh/known_hosts
  become_user: postgres
  become: yes
  delegate_to: "{{current_host}}"

- name: Add barman server to known_hosts on standby db server "{{standby}}"
  shell: ssh-keyscan -H "{{ barman_hostname }}" >> ~postgres/.ssh/known_hosts
  become_user: postgres
  become: yes
  delegate_to: "{{standby}}"
  when: standby != current_host

# add the current host keys to the barman server
# the postgres role creates a key with the name id_rsa.pub
- name: Install PG authorized keys on barman
  authorized_key:
    user: barman
    key: "{{ lookup('file', playbook_dir+'/id_rsa.pub') }}"
  delegate_to: "{{barman_hostname}}"

- name: Generate a temp file name
  shell: mktemp -d -p {{playbook_dir}}
  become_user: "{{ ansible_user }}"
  become: yes
  delegate_to: "127.0.0.1"
  register: local_pub

- name: Get pub key from barman host
  fetch: src=~barman/.ssh/id_rsa.pub dest={{local_pub.stdout}}/ flat=yes
  sudo_user: root
  sudo: true
  delegate_to: "{{barman_hostname}}"

- name: Install barman authorized keys on primary PG host
  authorized_key:
    user: postgres
    key: "{{ lookup('file', local_pub.stdout +'/id_rsa.pub') }}"
  delegate_to: "{{current_host}}"

- name: Install barman authorized keys on standby PG host
  authorized_key:
    user: postgres
    key: "{{ lookup('file', local_pub.stdout +'/id_rsa.pub') }}"
  delegate_to: "{{standby}}"
  when: standby != current_host

- name: Delete temp pub file dir
  file: name="{{local_pub.stdout}}" state=absent
  delegate_to: "127.0.0.1"
