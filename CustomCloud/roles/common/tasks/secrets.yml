---

- name: Ensure "{{ _vault_dir }}" directory exists locally
  local_action:
    module: file
    path: "{{ _vault_dir }}"
    state: directory
  run_once: yes
  sudo: no

# We generate a random vault passphrase and store it in a text file.
# This obviously needs improvementâ€”we should GPG-encrypt it with the
# public keys of everyone who needs access to the secret.

- name: Generate the vault passphrase for this cluster
  local_action: >
    shell pwgen -1y 32 > {{ _vault_passfile }}
  args:
    chdir: "{{ _vault_dir }}"
    creates: "{{ _vault_passfile }}"
  run_once: yes
  sudo: no

# We generate random secrets using pwgen and store them in individual
# files under _vault_dir, whence they may later be loaded by the roles
# that need them, using:
#
#   - include_var: '{{ playbook_dir }}/vault/some_secret.yml'
#
# If ansible-playbook is invoked with the right --vault-password-file
# argument (or --ask-vault-pass), this will work transparently and not
# store unencrypted secrets on disk.

- name: Generate encrypted secrets
  local_action: >
    shell echo "{{ item }}: >-\n  $(pwgen -1y 32)" |
    ansible-vault encrypt --vault-password-file {{ _vault_passfile }} --output {{ item }}.yml
  args:
    chdir: "{{ _vault_dir }}"
    creates: "{{ item }}.yml"
  run_once: yes
  sudo: no
  with_items: "{{ secrets }}"
