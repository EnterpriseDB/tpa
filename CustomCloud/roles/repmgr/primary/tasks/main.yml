---

- name: Update postgresql.conf on Primary
  lineinfile:
     dest="{{ pgconf }}/postgresql.conf"
     insertbefore=EOF
     line="shared_preload_libraries = 'repmgr_funcs'"
  register: pgconfig

- name: Update pg_hba.conf on Primary
  lineinfile:
     dest="{{ pgconf }}/pg_hba.conf"
     insertbefore='host    replication     all             192.168.61.0/24         trust'
     line='host    replication     all             {{hostvars[item].ec2_ip_address}}/32         trust\nhost    repmgr          repmgr          {{hostvars[item].ec2_ip_address}}/32         trust'
  when: "hostvars[item].ec2_tag_db == 'standby'"
  with_items: "{{ play_hosts }}"
  register: hbaconfig

- name: Restart Postgres on primary
  service: name="{{pgservice}}" state=restarted
  when: hbaconfig.changed or pgconfig.changed

- name: Create repmgr user on the primary
  postgresql_user: name=repmgr role_attr_flags=SUPERUSER state=present
  sudo_user: postgres

- name: Create repmgr database on the primary
  postgresql_db: name=repmgr owner=repmgr state=present
  sudo_user: postgres

- name: Check if the primary is registered
  command: repmgr -f /etc/repmgr/repmgr.conf cluster show
  sudo_user: postgres
  ignore_errors: True
  changed_when: False
  register: master

- name: Run repmgr master register on the primary
  command: repmgr -f /etc/repmgr/repmgr.conf --verbose master register
  sudo_user: postgres
  when: master|failed

- name: Start repmgrd after primary registration
  sudo_user: root
  service: name=repmgrd state=restarted
