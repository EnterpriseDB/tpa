---

# Re-activate the per-client Barman backups on the server and force a
# backup. TODO: This should use _backup_name, not inventory_hostname,
# but we can't do that sensibly without include_role.

- name: Set backups to active
  ini_file:
    dest: "/etc/barman.d/{{ inventory_hostname }}.conf"
    section: "{{ inventory_hostname }}"
    option: active
    value: "true"
  delegate_to: "{{ backup }}"

- name: Create replication slot for Barman
  command: >
    /usr/bin/barman receive-wal --create-slot {{ inventory_hostname }}
  delegate_to: "{{ backup }}"
  ignore_errors: yes
  register: slot
  become_user: barman
  become: yes

- fail: msg={{ slot.stderr }}
  when: >
    slot|failed and not "Replication slot 'barman' already exists" in slot.stderr

# Run barman cron manually (i.e., as opposed to letting it run via
# cron) so that we can be sure that pg_receivexlog is running when
# we switch-xlog below.

- name: Run barman cron
  command: >
    /usr/bin/barman cron
  delegate_to: "{{ backup }}"
  become_user: barman
  become: yes

- name: Run barman switch-xlog
  command: >
    /usr/bin/barman switch-xlog {{ inventory_hostname }}
  delegate_to: "{{ backup }}"
  become_user: barman
  become: yes

# XXX: This is a gross hack. Running "barman switch-xlog" and
# waiting for a while will clear up the "WAL archive: FAILED"
# problem in barman check, and backup attempts will succeed
# thereafter, but waiting for a random time is not a viable
# long-term solution.

- name: Pause to let a WAL segment be archived
  pause: seconds=30

- name: Force an immediate backup
  shell: >
    /usr/bin/barman backup "{{ inventory_hostname }}"
  delegate_to: "{{ backup }}"
  become_user: barman
  become: yes
