---

- block:
    - name: Add 2ndQuadrant Postgres repository signing key
      apt_key:
        id=70549BC8 url=http://packages.2ndquadrant.com/2ndQPostgres/apt/70549BC8.asc
        state=present
    - name: Add the 2ndQuadrant Postgres apt repository
      apt_repository:
        repo='deb [arch=amd64] http://packages.2ndquadrant.com/2ndQPostgres/apt/ {{ ansible_distribution_release }}-2ndquadrant-testing {{ pgversion }}'
        state=present update_cache=yes
    - name: Copy apt "preferences" file
      sudo: true
      copy: src="preferences" dest=/etc/apt/preferences
  when: (ansible_distribution == 'Debian' and use_2ndquadrant_postgres == 'yes')

- block:
    - name: Add PGDG repository signing key
      apt_key:
        id=ACCC4CF8 url=https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state=present
    - name: Add the PGDG apt repository
      apt_repository:
        repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg {{ pgversion }} main'
        state=present update_cache=yes
  when: ansible_distribution == 'Debian'

- block:
    - name: "Add {{ item.name }} repository signing key"
      apt_key:
        id={{ item.key_id}} url={{ item.key_url }}
        state=present
      with_items: "{{ extra_debian_repositories }}"
    - name: "Add the {{ item.name }} apt repository"
      apt_repository:
        repo='deb {{ item.repo }}'
        state=present update_cache=yes
      with_items: "{{ extra_debian_repositories }}"
  when: ansible_distribution == 'Debian'

- block:
    - name: Install PGDG repository RPM
      command: rpm -ivh http://yum.postgresql.org/9.4/redhat/rhel-7-x86_64/pgdg-redhat94-9.4-1.noarch.rpm
      register: rpm
      changed_when: "'is already installed' not in rpm.stdout"
      ignore_errors: yes
    - name: Ensure that postgresql comes from PGDG
      ini_file:
        dest: /etc/yum/pluginconf.d/rhnplugin.conf
        section: main
        option: exclude
        value: postgresql*
  when: ansible_distribution == 'RedHat'

# Disable automatic creation of data directory by package
- block:
    - name: Install postgresql-common package
      package: name=postgresql-common state=latest
    - name: Change contents of /etc/postgresql-common/createcluster.conf file
      lineinfile:
         dest="/etc/postgresql-common/createcluster.conf"
         regexp=^#create_main_cluster
         line="create_main_cluster = false"
  when: ansible_distribution == 'Debian'      
      
- name: Install Postgres packages
  package: name={{ item }} state=latest
  with_items: "{{ postgres_packages[ansible_distribution] }}"

# Install pgespresso. Regardless of whether barman is part of the cluster.
# Everyone needs backup and this can be configured after the fact as well
- name: Install pgespresso
  package: name=postgresql-{{ pgversion }}-pgespresso
  when: ansible_distribution == 'Debian'
