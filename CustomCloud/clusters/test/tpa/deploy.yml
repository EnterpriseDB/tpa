---

- name: Set up TPA cluster nodes

  # This play targets all hosts in the cluster.
  hosts: tag_Cluster_repmgr_test

  # Generally speaking, we want everything to run as root. We'll ssh in
  # to the servers as admin/ec2-user/ubuntu (depending on distribution),
  # and sudo to root. Tasks that need to run as some other user must set
  # sudo/sudo_user (or become/become_user) explicitly.
  sudo_user: root
  sudo: true

  pre_tasks:
    # This will translate "ec2_tag_node" into just "node", and likewise
    # for certain other ec2 tag values.
    - include: ../../../platforms/aws/hostvars.yml
      tags: always

  roles:
    # Finds ansible_distribution, makes sure python and other system
    # packages are installed, sets the hostname, etc.
    - role: common

    # Declare that we want to install Postgres 9.5. This just sets a few
    # handy defaults up front. The actual package installation happens a
    # few steps later.
    - role: postgres/vars
      vars:
        postgres_version: 9.5
      tags: always

    # Computes memory size and other instance-specific computations for
    # use in later steps (e.g. shared_buffers).
    - role: sys/tune
      tags: always

    # Set kernel-level configuration parameters persistently.
    - role: sys/sysctl
      vars:
        sysctl_values:
          net.ipv4.ip_forward: 1
      tags: [sys, sysctl]

    # Set up any additional filesystems required. The block device
    # layout is instance-specific.
    - role: sys/fs
      vars:
        device: /dev/xvdb
        mountpoint: "{{ postgres_home }}"
      tags: [sys, fs]

    - role: sys/openvpn
      vpn_network: 192.168.33.0/24
      tags: [sys, openvpn]

    - role: sys/hosts
      tags: [sys, hosts]

    - role: sys/rsyslog
      tags: [sys, rsyslog]

    - role: postgres
      when: >
        'postgres' in role

    # Set up Barman backups.
    - role: barman
      tags: barman

    # Set up repmgr
    - role: repmgr
      tags: repmgr

    - role: postgres/final
      when: >
        'postgres' in role
      tags: [postgres, final]

    # Set up monitor server
    - role: monitor/server
      when: >
        'monitor-server' in role
      tags: [monitor, server]

    # Set up monitor client
    - role: monitor/client
      become: true
      become_user: postgres
      when: >
        'monitor-client' in role
      tags: [monitor, client]
