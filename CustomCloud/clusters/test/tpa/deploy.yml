---

- name: Set up TPA cluster nodes
  hosts: tag_Name_TPA
  gather_facts: no
  sudo_user: root
  sudo: true
  vars:
    pgversion: 9.5
    enable_data_checksum: 'yes'
    use_2ndquadrant_postgres: 'yes'

    pg_device: /dev/xvdb
    pg_mountpoint: /var/lib/postgresql

    vpn_name: "{{ cluster_name|lower }}"
    vpn_network: 192.168.61.0
    vpn_netmask: 255.255.255.0

  pre_tasks:

    # Find the one host tagged as the primary and remember it for use in
    # individual roles later. Also store the node id and each node's VPN
    # address as facts.

    - name: Determine primary hostname
      set_fact: primary_hostname="{{ item }}"
      when: "hostvars[item].ec2_tag_db == 'primary'"
      with_items: "{{ play_hosts }}"
      tags: always

    - name: Set the primary hostname public IP address
      set_fact: primary_hostname_ip="{{ hostvars[item].ec2_ip_address }}"
      when: "hostvars[item].ec2_tag_db == 'primary'"
      with_items: play_hosts
      tags: always

    - name: Set the node id as a fact
      set_fact: node_id="{{ ec2_tag_node }}"
      tags: always

    - name: Store the VPN address (basically ec2 IP address) as a fact
      set_fact:
        vpn_address: "{{ hostvars[item].ec2_ip_address }}"
      when: "hostvars[item].ec2_tag_node == node_id"
      with_items: "{{ play_hosts }}"
      tags: always

  roles:

    - role: common
      tags: common

    # setup complete. Update, Upgrade and restart the instances
    - role: sys/instance
      tags: instance

    # Install the Postgres packages and basic configuration files.
    - role: postgres/pkg
      tags: postgres

    - role: repmgr/common
      tags: replication

    # Set up streaming replication.
    - role: repmgr/primary
      when: inventory_hostname == primary_hostname
      tags: replication

    - role: repmgr/standby
      when: inventory_hostname != primary_hostname
      tags: replication
