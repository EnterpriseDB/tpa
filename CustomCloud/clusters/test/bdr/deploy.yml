---

- name: Set up TPA BDR cluster
  hosts: tag_Cluster_TPA_BDR
  gather_facts: no
  sudo_user: root
  sudo: true
  vars_files:
    - vars/main.yml

  pre_tasks:
    - include: ../../../platforms/aws/hostvars.yml

    - set_fact:
        node_id: "{{ ec2_tag_node }}"
      tags: always

    # We use public IPs because BDR setup is usually cross-region
    - name: Store the VPN address (basically ec2 PUBLIC IP address) as a fact
      set_fact:
        vpn_address: "{{ hostvars[item].ec2_ip_address }}"
      when: "hostvars[item].ec2_tag_node == node_id"
      with_items: "{{ play_hosts }}"
      tags: always

    - name: Store DB servers list
      set_fact:
        db_servers: "{{ (db_servers|default([])) + [ item ] }}"
      when: "hostvars[item].ec2_region == ec2_region"
      with_items: "groups['tag_db_bdr']"
      tags: always

    - name: Define barman hostname
      set_fact:
        barman_hostname: "{{ item }}"
      when: "hostvars[item].ec2_region == ec2_region"
      with_items: "groups['tag_db_barman']"
      tags: always

    - name: Give error if there is no barman node assigned for region
      assert:
        that: barman_hostname is defined

    - name: Define control hostname
      set_fact:
        control_hostname: "{{ item }}"
      with_items: "groups['tag_db_control']"
      tags: always

  roles:

    - role: common

    - role: postgres/vars
      vars:
        postgres_version: 9.4
      tags: always

    # Setup complete. Update, Upgrade and restart the instances
    - role: sys/tune
      tags: always

    - role: sys/sysctl
      tags: [sys, sysctl]

    - role: sys/fs
      vars:
        device: /dev/xvdb
        mountpoint: "{{ postgres_home }}"
      tags: [sys, fs]

    - role: rsyslog
      tags: rsyslog

- name: Set up TPA BDR nodes
  hosts: tag_Cluster_TPA_BDR:&tag_db_bdr
  gather_facts: no
  sudo_user: root
  sudo: true
  vars_files:
    - vars/main.yml

  roles:

    # Install the BDR packages and basic configuration files.
    - role: bdr/pkg
      tags: bdr

    - role: postgres/initdb
      when: >
        'postgres' in role
      tags: postgres

    # Set up password-less SSH for the user postgres between all hosts
    # in this cluster.
    - role: sys/ssh
      ssh_user: postgres
      when: >
        'postgres' in role
      tags: [sys, ssh]

    - role: bdr/config
      tags: bdr

    - role: bdr/node
      tags: bdr

    - role: barman
      tags: barman

- name: Set up Barman node
  hosts: tag_Cluster_TPA_BDR:&tag_db_barman
  gather_facts: no
  sudo_user: root
  sudo: true
  vars_files:
    - vars/main.yml

  roles:

    # Setup backup from the BDR nodes
    - role: barman
      when: inventory_hostname == barman_hostname
      tags: barman

