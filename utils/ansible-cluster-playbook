#!/bin/bash
#
# Runs ansible-playbook on a playbook in the context of a clusterâ€”i.e.,
# with the correct path to the cluster's inventory and so on. To run
# ad-hoc commands, see ansible-cluster.
#
# Example: ansible-cluster-playbook test/tpa/x.yml

IFS=
set -e -u

utils=$(dirname $0)

script=deploy.yml
if [ "$(basename $0)" != "ansible-cluster-playbook" ]; then
    script=$(basename $0).yml
fi

cluster=${1:?No cluster specified}
shift

arg=$cluster
if [[ ${arg:0:1} != '/' ]]; then
    clusters=$(realpath $utils/../clusters);
    cluster=$(echo $cluster|sed 's,^clusters/,,')
    arg="$clusters/$cluster"
fi

if [ -d $arg ]; then
    cluster_dir=$arg
    if [ ! -f "$cluster_dir/$script" ]; then
        echo "Can't find script $cluster/$script"
        exit
    fi
elif [ -f $arg -a -d $(dirname $arg) ]; then
    cluster_dir=$(dirname $arg)
    script=$(basename $arg)
else
    echo "Can't interpret $cluster as cluster or script path"
    exit
fi

$utils/ansible-playbook \
    $cluster_dir/$script \
    -i $cluster_dir/inventory \
    --vault-password-file $cluster_dir/vault/vault_pass.txt \
    -e cluster=$cluster_dir "$@"
