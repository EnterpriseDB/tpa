---

# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

- import_playbook: "{{ tpa_dir }}/architectures/lib/init.yml"

# Now the cluster hosts are reachable by ssh and have all the required
# inventory variables set. We can get on with installing Postgres.

- name: Set up TPA cluster nodes
  any_errors_fatal: True
  max_fail_percentage: 0
  become_user: root
  become: true

  hosts: "{{ deploy_hosts|default('all') }}"
  tasks:
    - include_role: name=common

    - include_role: name=sys
      tags: sys

    - include_role: name=postgres
      when: >
        'postgres' in role

    - include_role: name=barman
      tags: barman

    - include_role: name=repmgr
      tags: repmgr

    - include_role: name=pgbouncer
      tags: pgbouncer

    - include_role: name=final
      tags: [final]

    - include_role: name=monitoring
      when: >
        'role_monitoring-server' in groups and
        ansible_distribution == 'Debian'
      tags: monitoring

# Finally, we must make sure we don't leave stale entries in /etc/hosts
# anywhere. (This won't matter for an initial deployment, because the
# role has already been applied above, but it will matter if we run a
# re-deployment limited to certain hosts.)

- name: Ensure /etc/hosts is correct cluster-wide
  any_errors_fatal: True
  max_fail_percentage: 0
  become_user: root
  become: yes
  hosts: all
  tasks:
    - include_role: name=sys/hosts
      tags: [sys, hosts]
