---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

- import_playbook: "{{ tpa_dir }}/architectures/lib/init.yml"
  tags: always

- name: Update repository configuration, if required
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  environment: "{{ target_environment }}"
  hosts: "{{ update_hosts|default('all') }}"
  tasks:
  - name: Configure local-repo, if available
    include_role:
      name: sys/local_repo

  - name: Set up repositories
    include_role:
      name: sys/repositories

- name: Stop repmgr
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  environment: "{{ target_environment }}"
  hosts: all
  tasks:
  - assert:
      that:
        failover_manager != 'patroni'
      fail_msg:
        Upgrade postgres does not support patroni managed clusters

  - name: Stop repmgr
    service:
      name: repmgr
      state: stopped
    when: >
      'postgres' in role

- name: Update postgres on replicas in cluster {{ cluster_dir }}
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  environment: "{{ target_environment }}"
  hosts: all
  serial: 1
  tasks:
  - include_role: name=postgres/update
    when: >
      'replica' in role

- name: Update postgres on primary in cluster {{ cluster_dir }}
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  environment: "{{ target_environment }}"
  hosts: all
  tasks:
  - name: Switchover to a replica
    command: >
      {{ postgres_bin_dir }}/repmgr standby switchover --verbose -f {{ repmgr_conf_file }} --siblings-follow
    become_user: "{{ postgres_user }}"
    become: yes
    when: >
      inventory_hostname == groups['replica'][0]

  # Note: this role was calculated earlier, so it's outdated after the
  # switchover, but it correctly identifies the instance to use.

  - include_role: name=postgres/update
    when: >
      'primary' in role

  - name: Switch back to the old primary
    command: >
      {{ postgres_bin_dir }}/repmgr standby switchover --verbose -f {{ repmgr_conf_file }} --siblings-follow
    become_user: "{{ postgres_user }}"
    become: yes
    when: >
      'primary' in role

- name: Start repmgr again
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  environment: "{{ target_environment }}"
  hosts: all
  tasks:
  - name: Restart repmgr
    service:
      name: repmgr
      state: started
    when: >
      'postgres' in role
