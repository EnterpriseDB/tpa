#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright Â© 2ndQuadrant Limited <info@2ndquadrant.com>

from __future__ import print_function

import sys

try:
    from tpaexec.architectures.bdr_always_on import BDR_Always_ON
except:
    print('Please invoke via: tpaexec configure <clustername> --architecture <archname>')
    sys.exit(-1)

class CAMO2x2(BDR_Always_ON):
    def add_architecture_options(self, p, g):
        g.add_argument(
            '--replicate-deletes-locally', action='store_true',
        )
        super(CAMO2x2, self).add_architecture_options(p, g)

    def update_argument_defaults(self, defaults):
        super(CAMO2x2, self).update_argument_defaults(defaults)
        defaults.update({
            'postgres_version': 11,
            'tpa_2q_repositories': [
                'products/2ndqpostgres/release',
            ]
        })

    def num_instances(self):
        return 10

    def update_instances(self, instances):
        super(CAMO2x2, self).update_instances(instances)
        if self.args['replicate_deletes_locally']:
            for i in instances:
                role = i.get('role', [])
                if 'bdr' in role and 'primary' in role:
                    vars = i.get('vars', {})
                    vars['subscriptions'] = [{
                        'type': 'bdr',
                        'database': self.args['bdr_database'],
                        'replication_sets': [
                            'cluster_global',
                            'local_%s_deletes' % i.get('location')
                        ]
                    }]
                    i['vars'] = vars

    def cluster_vars_args(self):
        return super(CAMO2x2, self).cluster_vars_args() + [
            'replicate_deletes_locally'
        ]

    def links_to_create(self):
        return super(CAMO2x2, self).links_to_create() + [
            'hooks'
        ]

if __name__ == '__main__':
    CAMO2x2().configure()
