#!/bin/bash

source $(dirname $0)/../lib/configure-common.sh

while [[ $# -gt 0 ]]; do
    opt=$1
    shift

    case "$opt" in
        --redmine*|--ticket|--issue)
            issue=${1:?Redmine issue id not specified}
            shift
            ;;
        --instances)
            instances=${1:?Number of instances not specified}
            shift
            ;;
        *)
            source $libdir/configure-options.sh
            ;;
    esac
done

vars+=([issue]=${issue:?--redmine-id <num> is required})
vars+=([instances]=${instances:?--instances <num> is required})
source $libdir/configure-defaults.sh
vars+=([cluster_vars]="$($libdir/cluster-vars \
    twoq_repositories=${twoq_repositories:-[]})")

if [[ -z "${subnet:-}" && -z "${SUBNET_PATTERN:-}" ]]; then
    mask=28
    if [[ $instances -gt 59 ]]; then
        error "specify --subnet[-pattern] if you need a /25 or larger subnet"
    elif [[ $instances -gt 27 ]]; then
        mask=26
    elif [[ $instances -gt 9 ]]; then
        mask=27
    fi
    export SUBNET_PATTERN="10.33.x.x/$mask"
fi

vars+=([subnet]=${subnet:=$($libdir/subnets 1)})

mkdir $cluster
cat > $cluster/config.yml <<PREAMBLE
---
architecture: $architecture

cluster_name: training_$issue
cluster_tags:
  Reference: https://redmine.2ndquadrant.it/issues/$issue

cluster_vars: ${vars[cluster_vars]}

cluster_rules:
  - {proto: tcp, from_port: 0, to_port: 65535, cidr_ip: 0.0.0.0/0}

ec2_ami:
  Name: ${vars[image_name]}
  Owner: ${vars[image_owner]}

ec2_vpc:
  Name: Test

instance_defaults:
  type: $instance_type
  region: $region
  subnet: $subnet
  default_volumes:
    - device_name: root
      volume_type: gp2
      volume_size: $root_volume_size
  role:
    - primary
  vars:
    ansible_user: ${vars[image_user]}

instances:
PREAMBLE

for i in $(seq 1 $instances);
do
    cat >> $cluster/config.yml <<INSTANCE
  - node: $i
    Name: ${hostnames[$i]}
INSTANCE
done

ln -sf $archdir/deploy.yml $cluster
