---

# © Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# This playbook searches for self-owned AMIs whose name matches a
# particular pattern across regions, and removes them. Be careful.
# Set the ami_name to a pattern matching whatever AMIs you want to
# remove. The expression below is written this way so that the
# 'TPA-' prefix can't be accidentally omitted.
# Can specify ami_name on the command line e.g.
#    tpaexec remove-images <clusterdir> -e ami_name="TPA-*RedHat*Postgres-10-*"

- hosts: localhost
  vars:
    regions:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - eu-west-1
      - eu-west-2
      - eu-central-1
    ami_name: "{{ 'TPA-' ~ '*2ndQPostgres-9.6-*2016*' }}"

  tasks:
  - ec2_ami_info:
      region: "{{ r }}"
      owner: self
      filters:
        name: "{{ ami_name }}"
    with_items: "{{ regions }}"
    loop_control:
      loop_var: r
    register: ec2_amis

  # Now ec2_amis.results looks like this:
  #
  # [{r: …, images: [{image_id: …}, …]},
  #  {r: …, images: …}]
  #
  # The outer results array has as many entries as there are regions,
  # and any of the inner results arrays may contain zero or more AMI
  # descriptions (alas, not including the region).
  #
  # We need to invoke ec2_ami with (r, ami_id), so we transform the
  # above into a more tractable structure that we can iterate over
  # easily using with_nested_dependents.
  #
  # [{region: …, amis: [ami-xxx, ami-yyy, …]}, …]

  - set_fact:
      region_amis:
        "{{ ec2_amis.results
            |json_query('[*].{region:r,amis:[images[*].[image_id][]][]}') }}"

  # Iterate over region_amis and remove each AMI that we found.
  #
  # (There's no reason we couldn't iterate over the original structure
  # using with_nested_dependents. I just happened to be playing with
  # JMESpath syntax and came up with the above transformation.)

  - ec2_ami:
      region: "{{ item.0.region }}"
      image_id: "{{ item.1 }}"
      delete_snapshot: yes
      state: absent
    with_nested_dependents:
      - region_amis
      - item.0.amis
