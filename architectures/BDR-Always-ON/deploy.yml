---

# This play must always be applied to all hosts in the cluster. Here we
# do any platform-specific checks and initialisation, confirm that all
# hosts are available, and perform basic fast discovery.

- name: Basic initialisation and fact discovery
  any_errors_fatal: True
  max_fail_percentage: 0

  hosts: all
  roles:
    - role: platforms
      tags: always

    - role: facts
      tags: always

    - role: postgres/vars
      tags: always

# Now the cluster hosts are reachable by ssh and have all the required
# inventory variables set. We can get on with installing Postgres.

- name: Set up TPA cluster nodes
  any_errors_fatal: True
  max_fail_percentage: 0
  become_user: root
  become: true

  hosts: "{{ deploy_hosts|default('all') }}"
  roles:
    - role: common

    # Set up any additional filesystems required. The block device
    # layout is instance-specific.
    - role: sys/volumes
      tags: [sys, fs]

    # Computes memory size and other instance-specific computations for
    # use in later steps (e.g., setting shared_buffers).
    - role: sys/tune
      tags: always

    - role: sys/sysctl
      vars:
        sysctl_values:
          net.ipv4.ip_forward: 1
      tags: [sys, sysctl]

    - role: sys/sysstat
      tags: [sys, sysstat]

    - role: sys/openvpn
      when: >
        'role_openvpn-server' in groups

    - role: sys/hosts
      tags: [sys, hosts]

    - role: sys/cloudinit
      tags: [sys, cloudinit]

    - role: sys/rsyslog
      tags: [sys, rsyslog]

    - role: postgres
      when: >
        'postgres' in role

    - role: barman
      tags: barman

    - role: repmgr
      tags: repmgr

    - role: pgbouncer
      tags: pgbouncer

    - role: haproxy
      when: >
        'haproxy' in role
      tags: haproxy

    - role: final
      tags: [final]

    - role: postgres/bdr
      when: >
        'bdr' in role and 'primary' in role
      tags: [postgres, bdr]

#    - role: monitoring
#      when: >
#        'role_monitoring-server' in groups and
#        ansible_distribution == 'Debian'
#      tags: monitoring

# Finally, we must make sure we don't leave stale entries in /etc/hosts
# anywhere. (This won't matter for an initial deployment, because the
# role has already been applied above, but it will matter if we run a
# re-deployment limited to certain hosts.)

- name: Ensure /etc/hosts is correct cluster-wide
  any_errors_fatal: True
  max_fail_percentage: 0
  become_user: root
  become: yes
  hosts: all
  roles:
    - role: sys/hosts
      tags: [sys, hosts]
