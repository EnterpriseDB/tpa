---

# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

- name: Validate arguments
  hosts: localhost
  tasks:
  - assert:
      msg: "Please specify a valid BDR instance name"
      that:
      - disable_instance is defined
      - disable_instance in groups['all']

- import_playbook: "{{ tpa_dir }}/architectures/lib/init.yml"
  tags: always

# Remove a server from the haproxy pool: this is the first part of
# what we would have to do to update Postgres and BDR on a running
# cluster.

- name: Collect haproxy facts for cluster {{ cluster_dir }}
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  environment: "{{ target_environment }}"
  hosts: all
  tasks:

  # Set all_haproxy_backend_servers and proxies_for_backend_server, as
  # well as my_haproxies.

  - include_role:
      name: haproxy
      tasks_from: map-backend-proxies.yml

  # As a precaution, we remove the server only if all of the servers are
  # healthy and match the expected configuration. It's convenient to do
  # this by just rerunning the basic pgbouncer and haproxy tests.

  - name: Check pgbouncer configuration and status
    include_role:
      name: test
      tasks_from: pgbouncer/basic.yml
    when: >
      'pgbouncer' in role

  - name: Check haproxy configuration and status
    include_role:
      name: test
      tasks_from: haproxy/basic.yml
    when: >
      'haproxy' in role

# Now that we're convinced the cluster is in a reasonable initial state,
# we can remove the given instance from the server pool for its haproxy
# instances (if any).

- name: Remove instance {{ disable_instance }} from haproxy server pools
  any_errors_fatal: true
  max_fail_percentage: 0
  become_user: root
  become: yes
  hosts: "{{ disable_instance }}"
  tasks:

  - include_role:
      name: haproxy
      tasks_from: disable-backend.yml
