#!/bin/bash

source $(dirname $0)/../lib/configure-common.sh

while [[ $# -gt 0 ]]; do
    opt=$1
    shift

    case "$opt" in
        --bdr-version)
            bdr_version=${1:?BDR major version not specified}
            shift
            ;;
        --num-instances)
            instances=${1:?number of instances not specified}
            shift
            ;;
        *)
            source $libdir/configure-options.sh
            ;;
    esac
done

# We must decide which version of Postgres to install, which version of
# BDR to install, and which repositories and extensions the combination
# requires.
#
# If --postgres-version is specified, we infer the correct BDR version.
# If --bdr-version is specified, we infer the correct Postgres version.
# If both are specified, we check that the combination makes sense.
#
# If any --2Q-repositories are specified, we do not interfere with that
# setting at all.

case "${POSTGRES_VERSION:-}" in
    9.4)
        if [[ ${bdr_version:=1} != [12] ]]; then
            error "BDR-Postgres 9.4 supports only BDR versions 1 and 2"
        fi
        ;;
    9.6)
        if [[ ${bdr_version:=2} != 2 ]]; then
            error "Postgres 9.6 supports only BDR version 2"
        fi
        ;;
    10|11)
        if [[ ${bdr_version:=3} != 3 ]]; then
            error "Postgres 10+ supports only BDR version 3"
        fi
        ;;
    "")
        if [[ ! ${bdr_version:-} && ${tpa_2q_repositories:-} ]]; then
            if [[ $tpa_2q_repositories == */bdr2/* ]]; then
                bdr_version=2
            elif [[ $tpa_2q_repositories == */bdr3/* ]]; then
                bdr_version=3
            fi
        fi
        case "${bdr_version:-}" in
            1)
                POSTGRES_VERSION=9.4
                ;;
            2)
                POSTGRES_VERSION=9.6
                ;;
            3)
                POSTGRES_VERSION=10
                ;;
            "")
                POSTGRES_VERSION=10
                bdr_version=3
                ;;
            *)
                error "BDR version $bdr_version not supported (try 1, 2, or 3)"
                ;;
        esac
        export POSTGRES_VERSION
        ;;
    *)
        error "Postgres version $POSTGRES_VERSION is not supported by BDR (try 9.4, 9.6, or 10)"
        ;;
esac

postgresql_flavour=postgresql
extensions="[]"

if [[ $bdr_version == 1 ]]; then
    : ${tpa_2q_repositories:="[]"}
    postgresql_flavour=postgresql-bdr
elif [[ $bdr_version == 2 ]]; then
    : ${tpa_2q_repositories:="[products/bdr2/release]"}
elif [[ $bdr_version == 3 ]]; then
    : ${tpa_2q_repositories:="[products/bdr3/release,products/pglogical3/release]"}
    extensions="[pglogical]"
fi

vars+=([instances]=${instances:=3})
source $libdir/configure-defaults.sh
subnets=(${subnet:-$($libdir/subnets 1)})
vars+=([subnets]=$(IFS=, && echo "[${subnets[*]}]"))
vars+=([cluster_tags]="$($libdir/cluster-tags)")
vars+=([cluster_vars]="$($libdir/cluster-vars \
    postgres_coredump_filter=0xff repmgr_failover=manual \
    tpa_2q_repositories=$tpa_2q_repositories \
    postgresql_flavour=$postgresql_flavour \
    extra_postgres_extensions=$extensions)")

v=$(write_vars $cluster)
template $archdir/templates/config.yml.j2 $v > $cluster/config.yml

source $libdir/configure-links.sh
