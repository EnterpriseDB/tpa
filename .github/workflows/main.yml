name: Integration Test

on:
  push:
    branches:
        - master
  pull_request:
    branches:
        - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  LANG: "C.UTF-8"
  TPA_2Q_SUBSCRIPTION_TOKEN: ${{ secrets.TPA_2Q_SUBSCRIPTION_TOKEN }}
  EDB_REPO_CREDENTIALS: ${{ secrets.EDB_REPO_CREDENTIALS }}
  EDB_REPO_CREDENTIALS_FILE: /tmp/edb_repo.conf

jobs:

  unit-test:
    name: Unit Test
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/install-requirements

      - name: Install tox
        run: pip install tox

      - name: Run tests with tox
        run: |
          TOX_PARALLEL_NO_SPINNER=1 tox -e py36-test,dep -p auto

  deployment-test:
    name: Deployment Test
    strategy:
      fail-fast: false
      matrix:
        tpa-architecture: ["M1", "BDR-Always-ON"]
        tpa-platform: ["docker"]
        postgres-flavour: ["postgresql", "2q", "epas"]
        exclude:
          - tpa-architecture: "M1"
            postgres-flavour: "2q"
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/install-requirements

      - uses: ./.github/actions/tpaexec-setup

      - name: Export EDB_REPO_CREDENTIALS_FILE to use EDB repositories
        run: |
          umask 066 && echo $EDB_REPO_CREDENTIALS > $EDB_REPO_CREDENTIALS_FILE
        shell: bash

      - name: Generate an initial configuration for a simple cluster
        run: ./bin/tpaexec configure basic-cluster --architecture ${{ matrix.tpa-architecture }} --platform ${{ matrix.tpa-platform }} --postgres-flavour ${{ matrix.postgres-flavour }} --os-image tpa/ubuntu

      - name: Provision the cluster
        run: ./bin/tpaexec provision basic-cluster

      - name: Deploy the cluster
        run: ./bin/tpaexec deploy basic-cluster

      - name: Test the cluster
        run: ./bin/tpaexec test basic-cluster

      - name: Deprovision the cluster
        run: ./bin/tpaexec deprovision basic-cluster
        if: always()

      - name: Remove basic-cluster directory
        run: rm -rf basic-cluster
        if: always()
