---
# Â© Copyright EnterpriseDB UK Limited 2015-2025 - All rights reserved.

# this action runs pip-compile on the one that changed on latest push making
# changes in one of the requirements .in files paths.

name: "Update requirements .txt files and open a PR"
description: |
  use .in file to regenerate the associated .txt files
  generates a PR targeting main branch with resulting changes
  to .txt files.

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/install-requirements

    - name: Install python dependencies
      shell: bash
      run: |
        pip install pip-tools

    # generating 1 file from requirements.in
    # without hashes for AAP EE image creation
    - name: Run pip-compile on requirements.in
      shell: bash
      run: |
        pip-compile -U requirements.in -o requirements-aap.txt

    - name: Run pip-compile on test dependency requirements/dep.in
      shell: bash
      run: |
        pip-compile -U --generate-hashes --reuse-hashes requirements/dep.in -o requirements/dep.txt

    - name: Run pip-compile on test dependency requirements/lint.in
      shell: bash
      run: |
        pip-compile -U --generate-hashes --reuse-hashes requirements/lint.in -o requirements/lint.txt

    - name: Run pip-compile on test dependency requirements/testing.in
      shell: bash
      run: |
        pip-compile -U --generate-hashes --reuse-hashes requirements/testing.in -o requirements/testing.txt

    - name: Run pip-compile on tpa-ee build requirements
      shell: bash
      run: |
        pip-compile -U tpa-ee/aap24/build-requirements.in -o tpa-ee/aap24/build-requirements.txt

    - name: Ensure arch specific hashes are present in final requirements files
      shell: bash
      id: hash_check
      run: |
        #!/bin/bash
        FILES="requirements.txt"

        ERRORS=$(python .github/actions/update-requirements/add_ppc64_hashes_to_requirements_files.py $FILES)
        echo "ERRORS<<EOF" >> $GITHUB_OUTPUT
        echo "$ERRORS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        # Exits with error if any found
        if [[ -n $ERRORS ]]
        then
          exit 1
        fi
        exit 0

    # install tox and run dep test
    - name: Install tox
      shell: bash
      run: pip install tox

    - name: Run dependency test with tox
      id: deps
      shell: bash
      run: |
        TOX_PARALLEL_NO_SPINNER=1 tox -e dep

    # create a PR with changes (if any) targeting main.
    # PR will be in Draft mode if tox dep test failed.
    # we add !cancelled() condition to ensure draft PR is created.
    - name: Template PR body
      if: ${{ !cancelled() }}
      id: template
      uses: chuhlomin/render-template@v1.10
      with:
        template: .github/actions/update-requirements/body.template.md
        vars: |
          pr_number: ${{ github.event.pull_request.number }}
          ref: ${{ github.head_ref || github.ref }}
          additional_body: "${{ steps.hash_check.outputs.ERRORS || 'All PPC64LE specific hashes could be matched.' }}"

    - name: Create Pull Request
      if: ${{ !cancelled() }}
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        base: main
        token: ${{ env.GITHUB_TOKEN }}
        commit-message: ${{ steps.template.outputs.result }}
        signoff: false
        branch: bot/update-requirements
        delete-branch: true
        title: 'Update python requirements'
        body: ${{ steps.template.outputs.result }}
        labels: |
          pip dependencies
        reviewers: EnterpriseDB/tpaexec-dev-team
        draft: ${{ steps.deps.conclusion == 'failure' || steps.hash_check.conclusion == 'failure'}}
        add-paths: |
          requirements*.*
          requirements/*.*
          tpa-ee/aap24/build-requirements.*
