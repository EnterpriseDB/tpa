---
# Â© Copyright EnterpriseDB UK Limited 2015-2024 - All rights reserved.

# this action runs pip-compile on the one that changed on latest push making
# changes in one of the requirements .in files paths.

name: "Update requirements .txt files and open a PR"
description: |
  use .in file to regenerate the associated .txt files
  generates a PR targeting main branch with resulting changes
  to .txt files.

runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/install-requirements

    - name: Install python dependencies
      shell: bash
      run: |
        pip install pip-tools
    # generating 2 files from requirements.in:
    # 1 with hashes for tpaexec setup
    # one without hashes for AAP EE image creation
    - name: Run pip-compile on requirements.in
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes requirements.in -o requirements.txt
        pip-compile requirements.in -o requirements-aap.txt

    - name: Prevents removal of PPC64 nor ARM64 hashes by mistake
      shell: bash
      run: |
       #!/bin/bash

       MAIN_REQUIREMENTS_FILE="requirements.txt"
       PPC64_REQUIREMENTS_FILE="requirements-ppc64le.txt"
       ARM64_REQUIREMENTS_FILE="requirements-arm64.txt"
       RET_VALUE=0

       function check_hash_present_in_file() {
         file_name=$1
         HASHES=$(cat $file_name | grep "hash=sha256" | cut -d ":" -f2)
         for _hash in $HASHES
         do
           if ! grep -q $_hash $MAIN_REQUIREMENTS_FILE ; then
             echo "Failed to find ($_hash) in $file_name"
             RET_VALUE=-1
           fi
         done
       }

       check_hash_present_in_file $PPC64_REQUIREMENTS_FILE
       check_hash_present_in_file $ARM64_REQUIREMENTS_FILE

       exit $RET_VALUE

    - name: Run pip-compile on requirements-ansible-8.in
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes requirements-ansible-8.in -o requirements-ansible-8.txt

    - name: Run pip-compile on test dependency requirements/ansible.in
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes requirements/ansible.in -o requirements/ansible.txt

    - name: Run pip-compile on test dependency requirements/dep.in
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes requirements/dep.in -o requirements/dep.txt

    - name: Run pip-compile on test dependency requirements/lint.in
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes requirements/lint.in -o requirements/lint.txt

    - name: Run pip-compile on test dependency requirements/testing.in
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes requirements/testing.in -o requirements/testing.txt

    - name: Run pip-compile on tpa-ee build requirements
      shell: bash
      run: |
        pip-compile --generate-hashes --reuse-hashes tpa-ee/aap24/build-requirements.in -o tpa-ee/aap24/build-requirements.txt

    # install tox and run dep test
    - name: Install tox
      shell: bash
      run: pip install tox

    - name: Run dependency test with tox
      id: deps
      shell: bash
      run: |
        TOX_PARALLEL_NO_SPINNER=1 tox -e dep

    # create a PR with changes (if any) targeting main.
    # PR will be in Draft mode if tox dep test failed.
    # we add !cancelled() condition to ensure draft PR is created.
    - name: Template PR body
      id: template
      uses: chuhlomin/render-template@v1.4
      with:
        template: .github/actions/update-requirements/body.template.md
        vars: |
          pr_number: ${{ github.event.pull_request.number }}
          ref: ${{ github.ref }}

    - name: Create Pull Request
      if: ${{ !cancelled() }}
      id: cpr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ env.GITHUB_TOKEN }}
        commit-message: ${{ steps.template.outputs.result }}
        signoff: false
        branch: bot/update-requirements
        delete-branch: true
        title: 'Update python requirements'
        body: ${{ steps.template.outputs.result }}
        labels: |
          pip dependencies
        reviewers: EnterpriseDB/tpaexec-dev-team
        draft: ${{ steps.deps.conclusion == 'failure' }}
        add-paths: |
          requirements*.txt
          requirements/*.txt
