# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-25 07:47
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import tpa.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('hostname', tpa.models.TextLineField(max_length=255)),
                ('domain', tpa.models.TextLineField(max_length=255)),
                ('assign_eip', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstanceType',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('hardware_configuration', tpa.models.TextLineField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderCredential',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('shared_identity', tpa.models.TextLineField(max_length=255)),
                ('shared_secret', tpa.models.TextLineField(max_length=255)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Provider')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('location', tpa.models.TextLineField(max_length=255, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Provider')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Instance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoleLink',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('client_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_links', to='tpa.Role')),
                ('server_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_links', to='tpa.Role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('netmask', tpa.models.TextLineField(max_length=255)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Cluster')),
                ('credentials', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.ProviderCredential')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('volume_type', tpa.models.TextLineField(max_length=255)),
                ('volume_size', models.PositiveIntegerField()),
                ('delete_on_termination', models.BooleanField(default=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Instance')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant')),
            ],
        ),
        migrations.CreateModel(
            name='VolumeType',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Provider')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VolumeUse',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Role')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant')),
                ('volume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Volume')),
            ],
        ),
        migrations.CreateModel(
            name='VPC',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('user_tags', django.contrib.postgres.fields.jsonb.JSONField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Provider')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', tpa.models.TextLineField(blank=True, db_index=True, max_length=255)),
                ('description', tpa.models.TextLineField(blank=True, max_length=255)),
                ('location', tpa.models.TextLineField(max_length=255, null=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Region')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='subnet',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant'),
        ),
        migrations.AddField(
            model_name='subnet',
            name='vpc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.VPC'),
        ),
        migrations.AddField(
            model_name='subnet',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Zone'),
        ),
        migrations.AddField(
            model_name='rolelink',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant'),
        ),
        migrations.AddField(
            model_name='role',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant'),
        ),
        migrations.AddField(
            model_name='providercredential',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant'),
        ),
        migrations.AddField(
            model_name='instancetype',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Zone'),
        ),
        migrations.AddField(
            model_name='instance',
            name='instance_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.InstanceType'),
        ),
        migrations.AddField(
            model_name='instance',
            name='subnet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Subnet'),
        ),
        migrations.AddField(
            model_name='instance',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tpa.Tenant'),
        ),
        migrations.AlterUniqueTogether(
            name='volumeuse',
            unique_together=set([('role', 'volume')]),
        ),
        migrations.AlterUniqueTogether(
            name='volume',
            unique_together=set([('instance', 'name')]),
        ),
    ]
