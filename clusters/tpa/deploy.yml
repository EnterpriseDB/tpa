---

# This play must always be applied to all hosts in the cluster. Here we
# do any platform-specific checks and initialisation, confirm that all
# hosts are available, and perform basic fact discovery.

- name: Basic initialisation and fact discovery
  any_errors_fatal: True
  max_fail_percentage: 0

  hosts: all
  tasks:
    - include_role: name=platforms
      tags: always

    - include_role: name=facts
      tags: always

    - include_role: name=postgres/vars
      vars:
        postgres_version: 10
        postgres_installation_source: pkg
      tags: always

# Now the cluster hosts are reachable by ssh and have all the required
# inventory variables set. We can get on with installing Postgres.

- name: Set up TPA cluster nodes
  any_errors_fatal: True
  max_fail_percentage: 0
  become_user: root
  become: true

  hosts: "{{ deploy_hosts|default('all') }}"
  tasks:
    - include_role: name=common

    # Set up any additional filesystems required. The block device
    # layout is instance-specific.
    - include_role: name=sys/volumes
      tags: [sys, fs]

    # Computes memory size and other instance-specific computations for
    # use in later steps (e.g., setting shared_buffers).
    - include_role: name=sys/tune
      tags: always

    - include_role: name=sys/sysctl
      vars:
        sysctl_values:
          net.ipv4.ip_forward: 1
      tags: [sys, sysctl]

    - include_role: name=sys/sysstat
      tags: [sys, sysstat]

    - include_role: name=sys/openvpn
      when: >
        vpn_network is defined and
        'tag_role_openvpn-server' in groups

    - include_role: name=sys/hosts
      tags: [sys, hosts]

    - include_role: name=sys/cloudinit
      tags: [sys, cloudinit]

    - include_role: name=sys/rsyslog
      tags: [sys, rsyslog]

    - include_role: name=postgres
      when: >
        'postgres' in role

    - include_role: name=barman
      tags: barman

    - include_role: name=repmgr
      tags: repmgr

    - include_role: name=postgres/final
      when: >
        'postgres' in role
      tags: [postgres, final]

    - include_role: name=monitoring
      when: >
        'tag_role_monitoring-server' in groups
      tags: monitoring

# Finally, we must make sure we don't leave stale entries in /etc/hosts
# anywhere. (This won't matter for an initial deployment, because the
# role has already been applied above, but it will matter if we run a
# re-deployment limited to certain hosts.)

- name: Ensure /etc/hosts is correct cluster-wide
  any_errors_fatal: True
  max_fail_percentage: 0
  become_user: root
  become: yes
  hosts: all
  tasks:
    - include_role: name=sys/hosts
      tags: [sys, hosts]
